openapi: 3.1.0
info:
  contact: {}
  title: Fabric
  version: 3.9.2
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
          <p>Hyperledger FAbric is an open-source, private-permissioned blockchain. It provides enhanced enterprise functionality with multiple pluggable consensus mechanisms, enterprise-grade permissions management, and transaction privacy features. <br/>
          The Hyperledger Fabric network is not run by Tatum, developers should connect to their own private instance. For testing purposes, there is a playground Fabric implementation available at <b>http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/</b>.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Data
paths:
  /v3/fabric/data:
    post:
      description: |
        <h4>2 credit per API call.</h4><br/>
        <p>Store data on the Hyperledger under the key.</p>
      operationId: FabricGenerateAccount
      summary: Store data
      tags:
        - Data
      parameters:
        - in: header
          name: x-fabric-endpoint
          required: true
          description: URL of the Fabric network
          schema:
            type: string
            example: 'http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - data
                - chain
              properties:
                key:
                  description: 'Key, under which the data will be stored.'
                  example: key_1
                  type: string
                data:
                  description: 'Data, which will be stored under the key.'
                  maxLength: 130000
                  type: string
                  example: Data to store.
                chain:
                  type: string
                  description: Chain to store data on.
                  enum:
                    - FABRIC
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    example: key_1
                    type: string
                    description: 'Key, under which the data was stored.'
                required:
                  - txId
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/fabric/data/{key}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get data from Fabric</p>
      operationId: FabricGetData
      summary: Get data
      tags:
        - Data
      parameters:
        - in: header
          name: x-fabric-endpoint
          required: true
          description: URL of the Fabric network
          schema:
            type: string
            example: 'http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/'
        - description: Key to obtain data.
          in: path
          name: key
          required: true
          schema:
            type: string
            example: key_1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    example: My data.
                    type: string
                    description: Stored data.
                required:
                  - data
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error403:
      properties:
        message:
          example: Forbidden
          description: Forbidden
          type: string
        statusCode:
          example: 403
          description: '403'
          type: number
      required:
        - statusCode
        - message
      type: object
    Error401:
      properties:
        message:
          example: Unauthorized
          description: Unauthorized
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - statusCode
        - message
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
