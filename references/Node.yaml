openapi: 3.1.0
info:
  contact: {}
  title: RPC node connection
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
      <p>These endpoints allows you to interact with the JSON RPC nodes of each of the blockchains we support.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Blockchain / Node
paths:
  '/v3/blockchain/node/{chain}/{xApiKey}**':
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as an http-based JSON RPC driver to connect directly to the blockchain node provided by Tatum.<br/>
        Tatum now supports JSON RPC nodes on these blockchains:<br/>
        <ul>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Ethereum</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Polygon (Matic)</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Kcs (KCS)</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">XDC Network (XinFin)</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Celo</a></b></li>
          <li><b><a href="https://developer.bitcoin.org/reference/rpc/index.html" target="_blank">Bitcoin</a></b></li>
          <li><b><a href="https://developer.bitcoin.org/reference/rpc/index.html" target="_blank">Litecoin</a></b></li>
          <li><b><a href="https://developer.bitcoin.org/reference/rpc/index.html" target="_blank">Bitcoin Cash</a></b></li>
          <li><b><a href="https://developer.bitcoin.org/reference/rpc/index.html" target="_blank">Dogecoin</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">VeChain</a></b></li>
          <li><b><a href="https://docs.cardano.org/cardano-components/cardano-graphql" target="_blank">Cardano</a></b></li>
          <li><b><a href="https://docs.terra.money/docs/develop/reference/README.html" target="_blank">Terra Luna</a></b></li>
          <li><b><a href="https://docs.elrond.com/sdk-and-tools/rest-api/nodes/" target="_blank">Elrond</a></b></li>
          <li><b><a href="https://developer.algorand.org/docs/rest-apis/restendpoints/" target="_blank">Algorand</a></b></li>
          <li><b><a href="https://docs.solana.com/developing/clients/jsonrpc-api" target="_blank">Solana</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Klaytn</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Harmony.ONE</a></b></li>
          <li><b><a href="https://ethereum.org/en/developers/" target="_blank">Binance Smart Chain</a></b></li>
          <li><b><a href="https://developers.stellar.org/api" target="_blank">Stellar</a></b></li>
          <li><b><a href="https://lisk.com/documentation/lisk-service/references/api.html" target="_blank">Lisk</a></b></li>
        </ul>
        </p>
      operationId: NodeJsonPostRpcDriver
      parameters:
        - description: 'Tatum X-API-Key used for authorization. You can omit this path parameter and either use the X-Api-Key header, or the API key tied to your IP address without any header.'
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: ea8ce228-6ca3-465c-abb0-fd3c5d35c0d5
        - description: Blockchain to communicate with.
          in: path
          name: chain
          required: true
          schema:
            type: string
            example: ETH
            enum:
              - BTC
              - ONE
              - ADA
              - BSC
              - XDC
              - LTC
              - DOGE
              - BCH
              - ETH
              - CELO
              - MATIC
              - VET
              - EGLD
              - ALGO
              - SOL
              - KLAY
              - KCS
              - LUNA
              - LISK
              - XLM
        - description: Type of the node to access for Algorand.
          in: query
          name: nodeType
          required: false
          schema:
            type: string
            enum:
              - ALGOD
              - INDEXER
        - description: Type of Ethereum testnet. Defaults to ethereum-ropsten.
          in: query
          name: testnetType
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      requestBody:
        content:
          application/json:
            schema:
                  type: object
                  description: Any valid Web3 RPC method content body.
                  example:
                    jsonrpc: '2.0'
                    method: web3_clientVersion
                    params: []
                    id: 2
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Any valid RPC response.
                example:
                  jsonrpc: '2.0'
                  id: 2
                  result: Geth/v1.9.9-omnibus-e320ae4c-20191206/linux-amd64/go1.13.4
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      summary: RPC HTTP driver
      tags:
        - Blockchain / Node
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as an http-based JSON RPC driver to connect directly to the blockchain node provided by Tatum.<br/>
        Tatum now supports JSON RPC nodes on these blockchains:<br/>
        <ul>
          <li><b><a href="https://docs.terra.money/docs/develop/reference/README.html" target="_blank">Terra Luna</a></b></li>
          <li><b><a href="https://developers.stellar.org/api" target="_blank">Stellar</a></b></li>
          <li><b><a href="https://docs.elrond.com/sdk-and-tools/rest-api/nodes/" target="_blank">Elrond</a></b></li>
          <li><b><a href="https://developer.algorand.org/docs/rest-apis/restendpoints/" target="_blank">Algorand</a></b></li>
        </ul>
        </p>
      operationId: NodeJsonRpcPutDriver
      parameters:
        - description: 'Tatum X-API-Key used for authorization. You can omit this path parameter and either use the X-Api-Key header, or the API key tied to your IP address without any header.'
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: ea8ce228-6ca3-465c-abb0-fd3c5d35c0d5
        - description: Blockchain to communicate with.
          in: path
          name: chain
          required: true
          schema:
            type: string
            example: ALGO
            enum:
              - EGLD
              - ALGO
              - XLM
              - LUNA
        - description: Type of the node to access for Algorand.
          in: query
          name: nodeType
          required: false
          schema:
            type: string
            enum:
              - ALGOD
              - INDEXER
        - description: Type of Ethereum testnet. Defaults to ethereum-ropsten.
          in: query
          name: testnetType
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      requestBody:
        content:
          application/json:
            schema:
                type: object
                description: Any valid Web3 RPC method content body.
                example:
                  jsonrpc: '2.0'
                  method: web3_clientVersion
                  params: []
                  id: 2
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Any valid RPC response.
                example:
                  jsonrpc: '2.0'
                  id: 2
                  result: Geth/v1.9.9-omnibus-e320ae4c-20191206/linux-amd64/go1.13.4
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      summary: RPC HTTP driver
      tags:
        - Blockchain / Node
    get:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as an http-based JSON RPC driver to connect directly to the blockchain node provided by Tatum.<br/>
        Tatum now supports JSON RPC nodes on these blockchains:<br/>
        <ul>
          <li><b><a href="https://docs.terra.money/docs/develop/reference/README.html" target="_blank">Terra Luna</a></b></li>
          <li><b><a href="https://developers.stellar.org/api" target="_blank">Stellar</a></b></li>
          <li><b><a href="https://docs.elrond.com/sdk-and-tools/rest-api/nodes/" target="_blank">Elrond</a></b></li>
          <li><b><a href="https://developer.algorand.org/docs/rest-apis/restendpoints/" target="_blank">Algorand</a></b></li>
          <li><b><a href="https://lisk.com/documentation/lisk-service/references/api.html" target="_blank">Lisk</a></b></li>
        </ul>
        </p>
      operationId: NodeJsonRpcGetDriver
      parameters:
        - description: 'Tatum X-API-Key used for authorization. You can omit this path parameter and either use the X-Api-Key header, or the API key tied to your IP address without any header.'
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: ea8ce228-6ca3-465c-abb0-fd3c5d35c0d5
        - description: Blockchain to communicate with.
          in: path
          name: chain
          required: true
          schema:
            type: string
            example: ALGO
            enum:
              - EGLD
              - ALGO
              - XLM
              - LUNA
              - LISK
        - description: Type of the node to access for Algorand.
          in: query
          name: nodeType
          required: false
          schema:
            type: string
            enum:
              - ALGOD
              - INDEXER
        - description: Type of Ethereum testnet. Defaults to ethereum-ropsten.
          in: query
          name: testnetType
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Any valid RPC response.
                example:
                  jsonrpc: '2.0'
                  id: 2
                  result: Geth/v1.9.9-omnibus-e320ae4c-20191206/linux-amd64/go1.13.4
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      summary: RPC HTTP driver
      tags:
        - Blockchain / Node
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey