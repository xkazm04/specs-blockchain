openapi: 3.1.0
info:
  contact: {}
  title: Ethereum
  version: 3.9.2
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: '
                  <p>Ethereum Blockchain enables access to the most commonly used Ethereum methods. These methods bring a small level of abstraction
                  and are used for applications that communicate with the blockchain directly. Some of the methods are used alongside Tatum Private Ledger
                  to connect the blockchain and the private ledger, like wallet generation or getting information about transactions.<br/>
                  Tatum supports 3 chains:
                  <ul><li>Mainnet - a regular live chain
                  <li>Ropsten - a chain used for testing purposes. Default testnet chain. Coins on the test chain have no value and can be obtained from
                        a faucet, e.g. <a target="_blank" href="https://faucet.ropsten.be/">https://faucet.ropsten.be/</a></li>
                  <li>Rinkeby - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from
                        a faucet, e.g. <a target="_blank" href="https://faucet.rinkeby.io/">https://faucet.rinkeby.io/</a> To use Rinkeby, you need to add HTTP Header
                  <b>-x-testnet-type:rinkeby</b></li></ul><br/>
                  Tatum supports BIP44 HD wallets. Because they can generate 2^31 addresses from 1 mnemonic phrase, they are very convenient and secure. It is possible to generate this type of wallet with 1 simple API call.</p>'
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/ethereum/wallet:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Tatum supports BIP44 HD wallets. Because they can generate 2^31 addresses from 1 mnemonic phrase, they are very convenient and secure. A mnemonic phrase consists of 24 special words in a defined order and can restore access to all generated addresses and private keys.<br/>Each address is identified by 3 main values:<ul><li>Private Key - your secret value which should never be revealed</li><li>Public Key - a public address to be published</li><li>Derivation index - an index of generated address</li></ul></p><p>Tatum follows the BIP44 specification and generates for Ethereum wallets with the derivation path m'/44'/60'/0'/0. More about BIP44 HD wallets can be found here - <a target="_blank" href="https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki">https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki</a>.
        Generates a BIP44 compatible Ethereum wallet.</p>
      operationId: EthGenerateWallet
      summary: Generate Ethereum wallet
      tags:
        - Account
      parameters:
        - description: Mnemonic to use for generating extended public and private keys.
          in: query
          name: mnemonic
          required: false
          schema:
            type: string
            maxLength: 500
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/address/{xpub}/{index}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generates an Ethereum account deposit address from an Extended public key. The deposit address is generated for the specific index - each extended public key can generate
        up to 2^31 addresses starting from index 0 until 2^31 - 1.</p>
      operationId: EthGenerateAddress
      summary: Generate Ethereum account address from Extended public key
      tags:
        - Account
      parameters:
        - description: Extended public key of wallet.
          in: path
          name: xpub
          required: true
          schema:
            type: string
            example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
        - description: Derivation index of the address to be generated.
          in: path
          name: index
          required: true
          schema:
            type: number
            example: 0
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: Ethereum address
                    example: '0xa7673161CbfE0116A4De9E341f8465940c2211d4'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/wallet/priv:
    post:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generates the private key of an address from a mnemonic for a given derivation path index. The private key is generated for the specific index - each mnemonic
        can generate up to 2^32 private keys starting from index 0 until 2^31 - 1.</p>
      operationId: EthGenerateAddressPrivateKey
      summary: Generate Ethereum private key
      tags:
        - Account
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivKey'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/web3/{xApiKey}':
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as an http-based web3 driver to connect directly to the Ethereum node provided by Tatum.
        To learn more about Ethereum Web3, please visit <a href="https://ethereum.org/en/developers/" target="_blank">Ethereum developers' guide.</a></p>
      operationId: EthWeb3Driver
      summary: Web3 HTTP driver
      tags:
        - Utilities
      parameters:
        - description: Tatum X-API-Key used for authorization.
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: asdlkfjnqunalkwjfnq2oi303294857k
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: query
          name: testnetType
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Any valid Web3 method content body.
              example:
                jsonrpc: '2.0'
                method: web3_clientVersion
                params: []
                id: 2
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Any valid Web3 response.
                example:
                  jsonrpc: '2.0'
                  id: 2
                  result: Geth/v1.9.9-omnibus-e320ae4c-20191206/linux-amd64/go1.13.4
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
  /v3/ethereum/block/current:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets the current Ethereum block number. This is the number of the latest block in the blockchain.</p>
      operationId: EthGetCurrentBlock
      summary: Get current block number
      tags:
        - Block
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 6491272
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/block/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets an Ethereum block-by-block hash or block number.</p>
      operationId: EthGetBlock
      summary: Get Ethereum block by hash
      tags:
        - Block
      parameters:
        - description: Block hash or block number
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '6256198498'
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthBlock'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/account/balance/{address}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets an Ethereum account balance in ETH. This method does not display the balance of ERC20 or ERC721 tokens in the account.</p>
      operationId: EthGetBalance
      summary: Get Ethereum account balance
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B'
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                    description: Balance in ETH
                    example: '10.52'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/transaction/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Ethereum transaction by transaction hash.</p>
      operationId: EthGetTransaction
      summary: Get Ethereum Transaction
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403TxNotFound'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/transaction/count/{address}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get a number of outgoing Ethereum transactions for the address. When a transaction is sent, there can be multiple outgoing transactions,
        which are not yet processed by the blockchain. To distinguish between them, there is a counter called a nonce, which represents
        the order of the transaction in the list of outgoing transactions.</p>
      operationId: EthGetTransactionCount
      summary: Get count of outgoing Ethereum transactions
      tags:
        - Transaction
      parameters:
        - description: address
          in: path
          name: address
          required: true
          schema:
            type: string
            maxLength: 42
            minLength: 42
            example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                example: 5
                description: 'Number of transactions, that were made from this address. Can be used as a nonce parameter in send transaction calls.'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/account/transaction/{address}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Ethereum transactions by address. This includes incoming and outgoing transactions for the address.</p>
      operationId: EthGetTransactionByAddress
      summary: Get Ethereum transactions by address
      tags:
        - Transaction
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x8ce4e40889a13971681391aad29e88efaf91f784'
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Transactions from this block onwords will be included.
          in: query
          name: from
          schema:
            type: number
            minimum: 0
            example: 1087623
        - description: Transactions up to this block will be included.
          in: query
          name: to
          schema:
            type: number
            minimum: 0
            example: 1087823
        - description: 'Sorting of the data. ASC - oldest first, DESC - newest first.'
          in: query
          name: sort
          schema:
            type: string
            default: DESC
            example: ASC
            enum:
              - ASC
              - DESC
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EthTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send Ethereum or Tatum supported ERC20 token from account to account.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
        </p>
      operationId: EthBlockchainTransfer
      summary: Send Ethereum / ERC20 from account to account
      tags:
        - Transaction
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TransferEthBlockchain'
                - $ref: '#/components/schemas/TransferEthBlockchainKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403EthBroadcast'
                  - $ref: '#/components/schemas/Error403EthGasPrice'
                  - $ref: '#/components/schemas/Error403EthTxBody'
                  - $ref: '#/components/schemas/Error403EthGasCalculation'
                  - $ref: '#/components/schemas/Error403EthTxHash'
                  - $ref: '#/components/schemas/Error403EthTxSign'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/gas:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Estimate gasLimit and gasPrice of the Ethereum transaction. Gas price is obtained from multiple sources + calculated based on the latest N blocks and the current mempool state. The <b>fast</b> one is used by default.
        </p>
      operationId: EthEstimateGas
      summary: Estimate ethereum transaction fees
      tags:
        - Transaction
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EthEstimateGas'
        required: true
      responses:
        '200':
          headers:
            X-Current-Block:
              schema:
                type: number
              description: Current block of the blockchain.
            X-Current-Block-Time:
              schema:
                type: string
                format: date-time
                example: '2021-11-11T11:54:49.000Z'
              description: Current block time.
          content:
            application/json:
              schema:
                type: object
                required:
                  - gasLimit
                  - gasPrice
                  - estimations
                properties:
                  gasLimit:
                    type: string
                    description: Gas limit for transaction in gas price.
                    example: '40000'
                  gasPrice:
                    type: string
                    description: Gas price in wei.
                    example: '20000000000'
                  estimations:
                    type: object
                    description: 'Detailed estimations for safe (under 30 minutes), standard (under 5 minutes) and fast (under 2 minutes) transaction times.'
                    required:
                      - safe
                      - standard
                      - fast
                    properties:
                      safe:
                        type: string
                        description: Safe gas price in wei.
                        example: '20000000000'
                      standard:
                        type: string
                        description: Standard gas price in wei.
                        example: '40000000000'
                      fast:
                        type: string
                        description: Fast gas price in wei.
                        example: '55000000000'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403EthTxBody'
                  - $ref: '#/components/schemas/Error403EthGasCalculation'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/smartcontract:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Invoke any method on an existing Smart Contract. It is possibleto call read or write method on the Smsrt Contract defined via contractAddress.
        For read operations, data is returned, for write operations, transaction Id of the associated transaction is returned.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: EthBlockchainSmartContractInvocation
      summary: Invoke Smart Contract method
      tags:
        - Utilities
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CallSmartContractMethod'
                - $ref: '#/components/schemas/CallReadSmartContractMethod'
                - $ref: '#/components/schemas/CallSmartContractMethodKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
                  - $ref: '#/components/schemas/Data'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403EthBroadcast'
                  - $ref: '#/components/schemas/Error403EthGasPrice'
                  - $ref: '#/components/schemas/Error403EthScBody'
                  - $ref: '#/components/schemas/Error403EthGasCalculation'
                  - $ref: '#/components/schemas/Error403EthTxHash'
                  - $ref: '#/components/schemas/Error403EthTxSign'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ethereum/account/transaction/erc20/internal/{address}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get Ethereum internal transactions by address.<br/></p>
      operationId: EthGetInternalTransactionByAddress
      summary: Get Ethereum internal transactions by address
      tags:
        - Transaction
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x8ce4e40889a13971681391aad29e88efaf91f784'
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
            maxLength: 50
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EthTxInternal'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/broadcast:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to Ethereum blockchain. This method is used internally from Tatum KMS, Tatum Middleware or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: EthBroadcast
      summary: Broadcast signed Ethereum transaction
      tags:
        - Transaction
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403EthBroadcast'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ethereum/gas/batch:
    post:
      description: |
        <h4>2 credits per API call + 2 credits per each gas estimation.</h4><br/>
        Estimate gasLimit and gasPrice of the Ethereum transaction. Gas price is obtained from multiple sources + calculated based on the latest N blocks and the current mempool state. The <b>fast</b> one is used by default.<br/>
        Result is calculated  in the order of the request array items.
      operationId: EthEstimateGasBatch
      summary: Estimate multiple transaction fees
      tags:
        - Transaction
      parameters:
        - description: Type of Ethereum testnet. Defaults to ropsten.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EthEstimateGas'
        required: true
      responses:
        '200':
          headers:
            x-current-block:
              schema:
                type: number
                description: "Current bock of the blockchain."
            x-current-block-time:
              schema:
                type: string
                format: data-time
                example: "2021-11-11T11:54:49.000Z"
                description: "Current block time."
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - result
                properties: 
                  error:
                    type: boolean
                    description: "If all estimations succeeded."
                    example: false
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - error
                      properties:
                        error:
                          type: boolean
                          description: "If estimation succeeded."
                          example: false
                        contractAddress:
                          description: "Contract address of ERC20 token, if transaction is ERC20 token"
                          example: "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                          maxLength: 42
                          minLength: 42
                          type: "string"
                        data:
                          type: object
                          required:
                            - gasLimit
                            - gasPrice
                            - estimations
                          properties:
                            gasLimit:
                              type: string
                              description: "Gas limit for transaction in gas price."
                              example: "40000"
                            gasPrice:
                              type: string
                              description: "Gas price in wei."
                            estimations:
                              type: object
                              description: Detailed estimations for safe (under 30 minutes), standard (under 5 minutes) and fast (under 2 minutes) transaction times.
                              required:
                                - safe
                                - standard
                                - fast
                            properties:
                              safe:
                                type: string
                                description: "Safe gas price in wei."
                                example: "20000000000"
                              standard:
                                type: string
                                description: "Standard gas price in wei."
                                example: "40000000000"
                              fast:
                                type: string
                                description: "Fast gas price in wei."
                                example: "55000000000"
                        msg:
                          type: string
                          description: "Error message. Present only if error - type."
                          example: "Provided address 0xt16360210b423d3a5205923d6e64a2d142d9f426 is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted."
                      
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403EthTxBody'
                  - $ref: '#/components/schemas/Error403EthGasCalculation'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
                example:
                  property: 12345
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: property1
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  min: property1 must not be less than 50000
      required:
        - errorCode
        - message
        - statusCode
        - data
      type: object
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403TxNotFound:
      properties:
        errorCode:
          description: tx.missing
          example: tx.missing
          type: string
        message:
          description: No such tx.
          example: No such tx.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthBroadcast:
      properties:
        errorCode:
          description: ethereum.broadcast.failed
          example: ethereum.broadcast.failed
          type: string
        message:
          description: 'Unable to broadcast transaction due to ${error}.'
          example: 'Unable to broadcast transaction due to ${error}.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthGasCalculation:
      properties:
        errorCode:
          description: eth.transaction.gas
          example: eth.transaction.gas
          type: string
        message:
          description: 'Unable to calculate gas limit for transaction. ${error}'
          example: 'Unable to calculate gas limit for transaction. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthTxBody:
      properties:
        errorCode:
          description: ethereum.transaction.body
          example: ethereum.transaction.body
          type: string
        message:
          description: 'Either currency, or tokenAddress must be defined.'
          example: 'Either currency, or tokenAddress must be defined.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthScBody:
      properties:
        errorCode:
          description: ethereum.sc.invalid
          example: ethereum.sc.invalid
          type: string
        message:
          description: Invalid parameters for smart contract invocation.
          example: Invalid parameters for smart contract invocation.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthGasPrice:
      properties:
        errorCode:
          description: gas.price.failed
          example: gas.price.failed
          type: string
        message:
          description: Unable to obtain current GAS price.
          example: Unable to obtain current GAS price.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthTxHash:
      properties:
        errorCode:
          description: eth.transaction.hash
          example: eth.transaction.hash
          type: string
        message:
          description: 'Unable to calculate transaction hash. ${error}'
          example: 'Unable to calculate transaction hash. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EthTxSign:
      properties:
        errorCode:
          description: eth.transaction.sign
          example: eth.transaction.sign
          type: string
        message:
          description: 'Unable to sign transaction. ${error}'
          example: 'Unable to sign transaction. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
      required:
        - statusCode
        - message
      type: object2
    BroadcastKMS:
      properties:
        txData:
          description: Raw signed transaction to be published to network.
          example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
          maxLength: 500000
          minLength: 1
          type: string
        signatureId:
          description: 'ID of prepared payment template to sign. Required only, when broadcasting transaction signed by Tatum KMS.'
          format: uuid
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
          minLength: 36
          maxLength: 36
      required:
        - txData
      type: object
    EthBlock:
      type: object
      properties:
        difficulty:
          description: Difficulty for this block.
          type: string
          example: '3296820833'
        extraData:
          description: The 'extra data' field of this block.
          type: string
          example: 0x
        gasLimit:
          description: The maximum gas allowed in this block.
          type: number
          example: 8000000
        gasUsed:
          description: The total used gas by all transactions in this block.
          type: number
          example: 7985124
        hash:
          description: Hash of the block. 'null' when its pending block.
          type: string
          example: '0x5d40698ee1b1ec589035f2a39c6162287e9056868cc79d66cfb248ba9f66c3fc'
        logsBloom:
          description: The bloom filter for the logs of the block. 'null' when its pending block.
          type: string
          example: '0x042080004210492080800001610060ad9600005bc81502020800000043e302020381a404000100409102040240300641108004000400007000008000c049558055a800000a0001800748900806502004200400108205005418c0218802281a0408060000533210462021050470810a010140102809011814018281115020090201068401847000a04010000c00084062000485640d00020220181150020008589105a41c0880001112034100010882545410240011402a3480050104004c310204000002009490d0012022a040c20c20011020401020140250805100410060008280200008181a220114102800001648640828200c00a94c1003a2060e001000'
        miner:
          description: The address of the beneficiary to whom the mining rewards were given.
          type: string
          example: '0xD8869d9E3d497323561Fbca2319a9FC3F6f10c4B'
        mixHash:
          description: ''
          type: string
          example: '0x7a44a1f56f12ae825fdc04550d7c3af2344daab987691771c06235f25fafcaa6'
        nonce:
          description: Hash of the generated proof-of-work. 'null' when its pending block.
          type: string
          example: '0xfa1692f52a7ac672'
        number:
          description: The block number. 'null' when its pending block.
          type: number
          example: 6470657
        parentHash:
          description: Hash of the parent block.
          type: string
          example: '0xd34aab8a455027086ac54034e68608c84d984401a883b7b5d91f9ae0bbefda15'
        receiptsRoot:
          description: ''
          type: string
          example: '0x4a496b6b7f2a1c5850bf9eebbea7193807be0067b1c06f17b9dde4eef7b2f960'
        sha3Uncles:
          description: SHA3 of the uncles data in the block.
          type: string
          example: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        size:
          description: The size of this block in bytes.
          type: number
          example: 15296
        stateRoot:
          description: The root of the final state trie of the block.
          type: string
          example: '0x32757c92f10c6c5a106c6fb4b9ca3ff301e413a59ca3d0513b4bf98c72efddba'
        timestamp:
          description: The unix timestamp for when the block was collated.
          type: number
          example: 1569600592
        totalDifficulty:
          description: Total difficulty of the chain until this block.
          type: string
          example: '23329673338013873'
        transactions:
          description: Array of transactions.
          type: array
          items:
            $ref: '#/components/schemas/EthTx'
        transactionsRoot:
          description: The root of the transaction trie of the block.
          type: string
          example: '0x5990081ef8515d561b50255af03c5d505f7725ddef27405dc67d23bfd0f47704'
    CallSmartContractMethod:
      type: object
      properties:
        contractAddress:
          maxLength: 42
          minLength: 42
          description: Address of ERC20 token
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          type: string
        methodName:
          minLength: 1
          maxLength: 500
          description: Name of the method to invoke on smart contract.
          type: string
          example: transfer
        methodABI:
          type: object
          example:
            inputs:
              - internalType: uint256
                name: amount
                type: uint256
            name: stake
            outputs: []
            stateMutability: nonpayable
            type: function
          description: ABI of the method to invoke.
        params:
          type: array
          items:
            type: object
          description: Parameters of the method to be invoked.
        amount:
          description: Amount of the assets to be sent.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromPrivateKey:
          type: string
          maxLength: 66
          example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
          minLength: 66
          description: 'Private key of sender address. Private key, or signature Id must be present.'
        nonce:
          type: number
          minimum: 0
          description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
        fee:
          description: 'Custom defined fee. If not present, it will be calculated automatically.'
          type: object
          required:
            - gasLimit
            - gasPrice
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction in gas price.
              pattern: '^[+]?\d+$'
              example: '40000'
            gasPrice:
              type: string
              description: Gas price in Gwei.
              pattern: '^[+]?\d+$'
              example: '20'
      required:
        - contractAddress
        - params
        - methodABI
        - fromPrivateKey
        - methodName
    CallReadSmartContractMethod:
      type: object
      properties:
        contractAddress:
          maxLength: 42
          minLength: 42
          description: Address of ERC20 token
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          type: string
        methodName:
          minLength: 1
          maxLength: 500
          description: Name of the method to invoke on smart contract.
          type: string
          example: transfer
        methodABI:
          type: object
          example:
            inputs:
              - internalType: uint256
                name: amount
                type: uint256
            name: stake
            outputs: []
            stateMutability: nonpayable
            type: function
          description: ABI of the method to invoke.
        params:
          type: array
          items:
            type: object
          description: Parameters of the method to be invoked.
      required:
        - contractAddress
        - params
        - methodABI
        - methodName
    CallSmartContractMethodKMS:
      type: object
      properties:
        contractAddress:
          maxLength: 42
          minLength: 42
          description: Address of ERC20 token
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          type: string
        amount:
          description: Amount of the assets to be sent.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        methodName:
          minLength: 1
          maxLength: 500
          description: Name of the method to invoke on smart contract.
          type: string
          example: transfer
        methodABI:
          type: object
          description: ABI of the method to invoke.
        params:
          type: array
          items:
            type: object
          description: Parameters of the method to be invoked.
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
        nonce:
          type: number
          minimum: 0
          description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
        fee:
          description: 'Custom defined fee. If not present, it will be calculated automatically.'
          type: object
          required:
            - gasLimit
            - gasPrice
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction in gas price.
              pattern: '^[+]?\d+$'
              example: '40000'
            gasPrice:
              type: string
              description: Gas price in Gwei.
              pattern: '^[+]?\d+$'
              example: '20'
      required:
        - contractAddress
        - params
        - methodABI
        - signatureId
        - methodName
    Data:
      type: object
      properties:
        data:
          description: 'Result of the method, if the method was read only.'
          example: 2
          oneOf:
            - type: object
            - type: string
            - type: number
            - type: array
            - type: boolean
      required:
        - data
    EthTx:
      type: object
      properties:
        blockHash:
          description: Hash of the block where this transaction was in.
          type: string
          example: '0xcf2c40f475e78c7c19778e1ae999a0e371c9319b38182ea15dc94536f13f9137'
        status:
          type: boolean
          example: true
          description: 'TRUE if the transaction was successful, FALSE, if the EVM reverted the transaction.'
        blockNumber:
          type: number
          description: Block number where this transaction was in.
          example: 6470854
        from:
          type: string
          description: Address of the sender.
          example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
        gas:
          type: number
          description: Gas provided by the sender.
          example: 21000
        gasPrice:
          type: string
          description: Gas price provided by the sender in wei.
          example: '1000000000'
        transactionHash:
          type: string
          description: Hash of the transaction.
          example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
        input:
          type: string
          description: The data sent along with the transaction.
          example: 0x
        nonce:
          type: number
          description: The number of transactions made by the sender prior to this one.
          example: 26836405
        to:
          type: string
          description: Address of the receiver. 'null' when its a contract creation transaction.
          example: '0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d'
        transactionIndex:
          type: number
          description: Integer of the transactions index position in the block.
          example: 3
        value:
          type: string
          description: Value transferred in wei.
          example: '1000000000000000000'
        gasUsed:
          type: number
          description: The amount of gas used by this specific transaction alone.
          example: 21000
        cumulativeGasUsed:
          type: number
          description: The total amount of gas used when this transaction was executed in the block.
          example: 314159
        contractAddress:
          type: string
          description: 'The contract address created, if the transaction was a contract creation, otherwise null.'
          example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
        logs:
          type: array
          description: 'Log events, that happened in this transaction.'
          items:
            type: object
            properties:
              address:
                type: string
                description: From which this event originated from.
                example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
              topics:
                type: array
                description: 'An array with max 4 32 Byte topics, topic 1-3 contains indexed parameters of the log.'
                items:
                  type: string
                  example: '0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234'
              data:
                type: string
                description: The data containing non-indexed log parameter.
              logIndex:
                type: number
                description: Integer of the event index position in the block.
              transactionIndex:
                type: number
                description: 'Integer of the transaction’s index position, the event was created in.'
              transactionHash:
                type: string
                description: Hash of the transaction this event was created in.
                example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
    EthTxInternal:
      type: object
      properties:
        from:
          type: string
          description: Address of the sender.
          example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
        to:
          type: string
          description: Address of the receiver. 'null' when its a contract creation transaction.
          example: '0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d'
        value:
          type: string
          description: Value transferred in wei.
          example: '1000000000000000000'
        blockNumber:
          type: number
          description: Block number where this transaction was in.
          example: 6470854
        timeStamp:
          type: string
          description: Time of the transaction in seconds.
          example: '1477837690'
        hash:
          type: string
          description: Hash of the transaction.
          example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
        input:
          type: string
          description: The data sent along with the transaction.
          example: ''
        traceId:
          type: string
          description: Trace ID.
          example: '0'
        type:
          type: string
          description: Type of the transaction.
          example: create
        errCode:
          type: string
          description: Error code.
          example: Bad jump destination
        gas:
          type: number
          description: Gas provided by the sender.
          example: 21000
        isError:
          type: string
          example: '0'
          description: '1 if the transaction was not successful, 0 otherwise.'
        gasUsed:
          type: number
          description: The amount of gas used by this specific transaction alone.
          example: 21000
        contractAddress:
          type: string
          description: 'The contract address created, if the transaction was a contract creation, otherwise null.'
          example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
    PrivKey:
      type: object
      properties:
        key:
          description: Generated private key.
          example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
          type: string
    PrivKeyRequest:
      type: object
      properties:
        index:
          description: Derivation index of private key to generate.
          example: 0
          maximum: 2147483647
          type: integer
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key from.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
      required:
        - mnemonic
        - index
    SignatureId:
      type: object
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TransferEthBlockchain:
      type: object
      properties:
        data:
          type: string
          maxLength: 50000
          description: 'Additinal data, that can be passed to blockchain transaction as data property. Only for ETH transactions.'
          example: My note to recipient.
        nonce:
          type: number
          minimum: 0
          description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
        to:
          description: Blockchain address to send assets
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          maxLength: 42
          minLength: 42
          type: string
        currency:
          description: Currency to transfer from Ethereum Blockchain Account.
          enum:
            - USDT
            - LEO
            - LINK
            - UNI
            - FREE
            - GMC
            - GMC_BSC
            - RMD
            - MKR
            - USDC
            - BAT
            - TUSD
            - BUSD
            - PAX
            - PAXG
            - PLTC
            - MMY
            - WBTC
            - XCON
            - ETH
          example: ETH
          type: string
        fee:
          description: 'Custom defined fee. If not present, it will be calculated automatically.'
          type: object
          required:
            - gasLimit
            - gasPrice
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction in gas price.
              example: '40000'
              pattern: '^[+]?\d+$'
            gasPrice:
              type: string
              description: Gas price in Gwei.
              example: '20'
              pattern: '^[+]?\d+$'
        amount:
          description: Amount to be sent in Ether.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromPrivateKey:
          type: string
          maxLength: 66
          example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
          minLength: 66
          description: 'Private key of sender address. Private key, or signature Id must be present.'
      required:
        - to
        - currency
        - fromPrivateKey
    TransferEthBlockchainKMS:
      type: object
      properties:
        data:
          type: string
          maxLength: 50000
          description: 'Additinal data, that can be passed to blockchain transaction as data property. Only for ETH transactions.'
          example: My note to recipient.
        nonce:
          type: number
          minimum: 0
          description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
        to:
          description: Blockchain address to send assets
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          maxLength: 42
          minLength: 42
          type: string
        currency:
          description: Currency to transfer from Ethereum Blockchain Account.
          enum:
            - USDT
            - LEO
            - LINK
            - UNI
            - FREE
            - GMC
            - GMC_BSC
            - RMD
            - MKR
            - USDC
            - BAT
            - TUSD
            - BUSD
            - PAX
            - PAXG
            - PLTC
            - MMY
            - WBTC
            - XCON
            - ETH
          example: ETH
          type: string
        fee:
          description: 'Custom defined fee. If not present, it will be calculated automatically.'
          type: object
          required:
            - gasLimit
            - gasPrice
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction in gas price.
              example: '40000'
              pattern: '^[+]?\d+$'
            gasPrice:
              type: string
              description: Gas price in Gwei.
              example: '20'
              pattern: '^[+]?\d+$'
        amount:
          description: Amount to be sent in Ether.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
      required:
        - to
        - amount
        - currency
        - signatureId
    TransactionHashKMS:
      type: object
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    EthEstimateGas:
      type: object
      properties:
        from:
          type: string
          maxLength: 42
          example: '0xfb99f8ae9b70a0c8cd96ae665bbaf85a7e01a2ef'
          minLength: 42
          description: Sender address.
        to:
          description: Blockchain address to send assets
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          maxLength: 42
          minLength: 42
          type: string
        contractAddress:
          description: 'Contract address of ERC20 token, if transaction is ERC20 token'
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          maxLength: 42
          minLength: 42
          type: string
        amount:
          description: Amount to be sent in Ether or ERC20.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        data:
          type: string
          maxLength: 50000
          description: 'Additinal data, that can be passed to blockchain transaction as data property. Only for ETH transactions.'
          example: My note to recipient.
      required:
        - to
        - amount
        - from
    Wallet:
      type: object
      properties:
        address:
          maxLength: 58
          minLength: 58
          description: address of Algorand account.
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
          type: string
        secret:
          maxLength: 103
          minLength: 103
          description: 'secretKey can generate Mnemonic, similar to private Key.'
          type: string
          example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
  securitySchemes:
      X-Api-Key:
        description: |
          To maintain the highest security level, Tatum requires X-API-Key HTTP header.
          This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
          Each X-API-Key is bound to the test or production blockchains.
        in: header
        name: x-api-key
        type: apiKey