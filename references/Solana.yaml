openapi: 3.1.0
info:
  contact: {}
  title: Solana
  version: 3.9.3
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
          <p>Solana is a blockchain network focused on fast transactions and high throughput. It uses a unique method of ordering transactions to improve its speed. Users can pay their transaction fees and interact with smart contracts with SOL, the network's native cryptocurrency.<br/>
          <b>For now, Solana is in <b>BETA</b> and there is a rate limitation applied for all projects for Solana to 40 req/s on the platform.</b><br/>
          Tatum supports 2 chains:
          <ul><li>Mainnet BETA - a regular live chain
          <li>Devnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from
          a faucet, e.g. <a target="_blank" href="https://solfaucet.com/">https://solfaucet.com/</a></li></ul></p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/solana/wallet:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate Solana private key and account address.</p>
      operationId: SolanaGenerateWallet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    description: Generated account address.
                    example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
                    type: string
                  privateKey:
                    description: Generated private key for account.
                    example: 3abc79a31093e4cfa4a724e94a44906cbbc3a32e2f75f985a28616676a5dbaf1de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad
                    type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Generate Solana wallet
      tags:
        - Account
  '/v3/solana/web3/{xApiKey}':
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as a http-based JSON RPC driver to connect directly to the Solana node provided by Tatum.
        To learn more about Solana JSON RPC, please visit <a href="https://docs.solana.com/developing/clients/jsonrpc-api" target="_blank">Solana developer's guide.</a></p>
      operationId: SolanaWeb3Driver
      parameters:
        - description: Tatum X-API-Key used for authorization.
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: asdlkfjnqunalkwjfnq2oi303294857k
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Any valid JSON RPC method content body.
              example:
                jsonrpc: '2.0'
                method: getVersion
                params: []
                id: 2
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Any valid JSON RPC response.
                example:
                  jsonrpc: '2.0'
                  result:
                    solana-core: 1.8.5
                  id: 1
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      summary: Solana RPC node
      tags:
        - Utilities
  /v3/solana/block/current:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Solana current block number. This is the number of the latest block in the blockchain.</p>
      operationId: SolanaGetCurrentBlock
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 6491272
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Solana current block number
      tags:
        - Block
  '/v3/solana/block/{height}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get Solana block by block hash or block number. <br/>
        You can find full data description here - <a target="blank" href="https://docs.solana.com/developing/clients/jsonrpc-api#getblock">https://docs.solana.com/developing/clients/jsonrpc-api#getblock</a>
        </p>
      operationId: SolanaGetBlock
      parameters:
        - description: Block number
          in: path
          name: height
          required: true
          schema:
            type: number
            example: 6470657
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolanaBlock'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Solana block by number
      tags:
        - Block
  '/v3/solana/account/balance/{address}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Solana account balance in SOL. This method does not prints any balance of the SLP or NFT tokens on the account.</p>
      operationId: SolanaGetBalance
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                    description: Balance in SOL
                    example: '10.52'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Solana Account balance
      tags:
        - Account
  '/v3/solana/transaction/{hash}':
    get:
      description: |
        <h4>2 credit per API call.</h4><br/><p>Get Solana transaction by transaction hash.<br/>
        You can find full data description here - <a target="blank" href="https://docs.solana.com/developing/clients/jsonrpc-api#gettransaction">https://docs.solana.com/developing/clients/jsonrpc-api#gettransaction</a>
        </p>
      operationId: SolanaGetTransaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: 5oSXZkPregqGhHrTcbWhgHQJETvBHtBYssuuCMJ3qroAgHsHndsr8fyY8kY76AgwmMaZBZW8ThHAXwjDaUSweApS
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolanaTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403TxNotFound'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Solana Transaction
      tags:
        - Transaction
  /v3/solana/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send SOL from account to account.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
        </p>
      operationId: SolanaBlockchainTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TransferSolanaBlockchain'
                - $ref: '#/components/schemas/TransferSolanaBlockchainKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403SolanaBroadcast'
                  - $ref: '#/components/schemas/Error403SolanaTxBody'
                  - $ref: '#/components/schemas/Error403SolanaTxHash'
                  - $ref: '#/components/schemas/Error403SolanaTxSign'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Send SOL from account to account
      tags:
        - Transaction
components:
  schemas:
    SolanaBlock:
      type: object
      properties:
        blockHeight:
          type: number
          example: 94778421
        blockTime:
          type: number
          example: 1638279333
        blockhash:
          type: string
          example: Ch7qVhCkSqEvhWE8xzJZbJKRcsH6wtTjfiMJdt9eKiD7
        parentSlot:
          type: number
          example: 97742681
        previousBlockhash:
          type: string
          example: C3vsoVwVWx7yPRhsNoKpcm2CJTrnVcvimdC4bd3jTPbj
        rewards:
          type: array
          items:
            type: object
            properties:
              commission:
                type: string
                format: nullable
              lamports:
                type: number
                example: 7
              postBalance:
                type: number
                example: 10149491708073344
              pubkey:
                type: string
                example: ETSKPSzESbVdmtUn67LA2p9J1gPCSEgYvmJS9pNNWQqR
              rewardType:
                type: string
                example: Rent
        transactions:
          type: array
          items:
            type: object
            properties:
              meta:
                type: object
                properties:
                  err:
                    type: string
                    format: nullable
                  fee:
                    type: number
                    example: 5000
                  innerInstructions:
                    type: array
                  logMessages:
                    type: array
                    items:
                      type: string
                      example: 'Program Vote111111111111111111111111111111111111111 invoke [1]'
                  postBalances:
                    type: array
                    items:
                      type: number
                      example: 1101768559544744
                  postTokenBalances:
                    type: array
                    items:
                      type: number
                      example: 1101768559549744
                  preBalances:
                    type: array
                    items:
                      type: number
                      example: 1101768559549744
                  preTokenBalances:
                    type: array
                    items:
                      type: number
                      example: 1101768559549744
              transaction:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          numReadonlySignedAccounts:
                            type: number
                            example: 0
                          numReadonlyUnsignedAccounts:
                            type: number
                            example: 3
                          numRequiredSignatures:
                            type: number
                            example: 1
                      accountKeys:
                        type: array
                        items:
                          type: object
                          properties:
                            _bn:
                              type: string
                              example: 0974de54f77afa9ad3d474909f6ce095b9623a359a5d08cc807b8a92dd5e1f96
                      recentBlockhash:
                        type: string
                        example: C3vsoVwVWx7yPRhsNoKpcm2CJTrnVcvimdC4bd3jTPbj
                      instructions:
                        type: array
                        items:
                          type: object
                          properties:
                            accounts:
                              type: array
                              items:
                                type: number
                                example: 1
                            data:
                              type: string
                              example: 2ZjTR1vUs2pHXyTM4rXnJowxekwfBcBJwsE4EameG3Sapvgfit27vrBd8k8QYCoTtMgfHEJLDqWEWBYUYVd
                            programIdIndex:
                              type: number
                              example: 4
                      indexToProgramIds:
                        type: object
                  signatures:
                    type: array
                    items:
                      type: string
                      example: 5FPSzkTsjZDBigU3ZagvkcwSPimt4K6voqrN9uUNVzWDBeRXWVH3uMarDPpSfrS7sFQeyKyDd5KpbdCrL3EWEP59
    SolanaTx:
      type: object
      properties:
        blockTime:
          type: number
          example: 1638279975
        meta:
          type: object
          properties:
            err:
              type: string
              format: nullable
            fee:
              type: number
              example: 5000
            innerInstructions:
              type: array
              items:
                type: object
            logMessages:
              type: array
              items:
                type: string
                example: 'Program 11111111111111111111111111111111 invoke [1]'
            postBalances:
              type: array
              items:
                type: number
                example: 987013800
            postTokenBalances:
              type: array
              items:
                type: number
                example: 12345321
            preBalances:
              type: array
              items:
                type: number
                example: 988018800
            preTokenBalances:
              type: array
              items:
                type: number
                example: 12345321
            rewards:
              type: array
            status:
              type: object
              properties:
                Ok:
                  type: string
                  format: nullable
        slot:
          type: number
          example: 97744333
        transaction:
          type: object
          properties:
            message:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    numReadonlySignedAccounts:
                      type: number
                      example: 0
                    numReadonlyUnsignedAccounts:
                      type: number
                      example: 1
                    numRequiredSignatures:
                      type: number
                      example: 1
                accountKeys:
                  type: array
                  items:
                    type: object
                    properties:
                      _bn:
                        type: string
                        example: de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad
                recentBlockhash:
                  type: string
                  example: 4pMdFUHg8bqTv19So2ZdvorGWqHwzFBmZL5wf8gDJ8Eh
                instructions:
                  type: array
                  items:
                    type: object
                    properties:
                      accounts:
                        type: array
                        items:
                          type: number
                          example: 0
                      data:
                        type: string
                        example: 3Bxs4Bc3VYuGVB19
                      programIdIndex:
                        type: number
                        example: 2
                indexToProgramIds:
                  type: object
            signatures:
              type: array
              items:
                type: string
                example: 2ast4sMbp796obAKq5XDZnKf2truXdxC2u75c6UnzBeK5bZ7BjjZoE5uMy9pyr3dzxoakE67NvB7Cdgn21zE3BVG
    Error403SolanaBroadcast:
      properties:
        errorCode:
          description: solana.broadcast.failed
          example: Solana.broadcast.failed
          type: string
        message:
          description: 'Unable to broadcast transaction due to ${error}.'
          example: 'Unable to broadcast transaction due to ${error}.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403SolanaTxHash:
      properties:
        errorCode:
          description: solana.transaction.hash
          example: solana.transaction.hash
          type: string
        message:
          description: 'Unable to calculate transaction hash. ${error}'
          example: 'Unable to calculate transaction hash. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403SolanaTxSign:
      properties:
        errorCode:
          description: solana.transaction.sign
          example: solana.transaction.sign
          type: string
        message:
          description: 'Unable to sign transaction. ${error}'
          example: 'Unable to sign transaction. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403SolanaTxBody:
      properties:
        errorCode:
          description: solana.transaction.body
          example: Solana.transaction.body
          type: string
        message:
          description: 'Either currency, or tokenAddress must be defined.'
          example: 'Either currency, or tokenAddress must be defined.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    TransferSolanaBlockchain:
      type: object
      title: PrivateKey
      properties:
        from:
          description: Blockchain address to send assets from
          example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
          maxLength: 44
          minLength: 44
          type: string
        to:
          description: Blockchain address to send assets to
          example: FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU
          maxLength: 44
          minLength: 44
          type: string
        amount:
          description: Amount to be sent in SOL.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromPrivateKey:
          type: string
          maxLength: 128
          example: 3abc79a31093e4cfa4a724e94a44906cbbc3a32e2f75f985a28616676a5dbaf1de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad
          minLength: 128
          description: 'Private key of sender address. Private key, or signature Id must be present.'
      required:
        - to
        - amount
        - from
        - fromPrivateKey
    TransferSolanaBlockchainKMS:
      type: object
      title: Signature
      properties:
        from:
          description: Blockchain address to send assets from
          example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
          maxLength: 44
          minLength: 44
          type: string
        to:
          description: Blockchain address to send assets to
          example: FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU
          maxLength: 44
          minLength: 44
          type: string
        amount:
          description: Amount to be sent in SOL.
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
      required:
        - to
        - amount
        - from
        - signatureId
    Error403TxNotFound:
      properties:
        errorCode:
          description: tx.missing
          example: tx.missing
          type: string
        message:
          description: No such tx.
          example: No such tx.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    SignatureId:
      type: object
      title: SignatureId
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TransactionHashKMS:
      type: object
      title: PrivateKey
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
