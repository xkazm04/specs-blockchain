openapi: 3.1.0
info:
  contact: {}
  title: VeChain
  version: 3.9.2
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
          <p>VeChain Blockchain enables access to the most commonly used VeChain methods. Tatum does not support off-chain capabilities for the VET blockchain.
          Tatum KMS is not supported for VET transactions. VET supports 2 native assets - VET and VTHO. VTHO is used for paying transaction fees.
          <br/>
          Tatum supports 2 chains:
          <ul><li>Mainnet - a regular live chain
          <li>Testnet - a test chain used for testing purposes. Coins on the test chain have no value and can be obtained from
          a faucet, e.g. <a target="_blank" href="https://faucet.vecha.in/">https://faucet.vecha.in/</a></li></ul>
          Tatum supports BIP44 HD wallets. Because they can generate 2^31 addresses from 1 mnemonic phrase, they are very convenient and secure. It is possible to generate this type of wallet with 1 simple API call.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/vet/wallet:
    get:
      description: |
        <h4>5 credits per API call.</h4><br/><p>Tatum supports BIP44 HD wallets. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase. Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.<br/>Each address is identified by 3 main values:<ul><li>Private Key - your secret value, which should never be revealed</li><li>Public Key - public address to be published</li><li>Derivation index - index of generated address</li></ul></p><p>Tatum follows BIP44 specification and generates for VeChain wallet with derivation path m'/44'/818'/0'/0. More about BIP44 HD wallets can be found here - <a target="_blank" href="https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki">https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki</a>.
        Generate BIP44 compatible VeChain wallet.</p>
      operationId: VetGenerateWallet
      summary: Generate VeChain wallet
      tags:
        - Account
      parameters:
        - description: Mnemonic to use for generation of extended public and private keys.
          in: query
          name: mnemonic
          required: false
          schema:
            type: string
            maxLength: 500
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/address/{xpub}/{index}':
    get:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Generate VeChain account deposit address from Extended public key. Deposit address is generated for the specific index - each extended public key can generate
        up to 2^31 addresses starting from index 0 until 2^31 - 1.</p>
      operationId: VetGenerateAddress
      summary: Generate VeChain account address from Extended public key
      tags:
        - Account
      parameters:
        - description: Extended public key of wallet.
          in: path
          name: xpub
          required: true
          schema:
            type: string
            example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
        - description: Derivation index of desired address to be generated.
          in: path
          name: index
          required: true
          schema:
            type: number
            example: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: VeChain addres
                    example: '0xa7673161CbfE0116A4De9E341f8465940c2211d4'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/vet/wallet/priv:
    post:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Generate private key of address from mnemonic for given derivation path index. Private key is generated for the specific index - each mnemonic
        can generate up to 2^32 private keys starting from index 0 until 2^31 - 1.</p>
      operationId: VetGenerateAddressPrivateKey
      summary: Generate VeChain private key
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivKey'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/vet/block/current:
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get VeChain current block number.</p>
      operationId: VetGetCurrentBlock
      summary: Get VeChain current block
      tags:
        - Block
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 6491272
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/block/{hash}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get VeChain Block by block hash or block number.</p>
      operationId: VetGetBlock
      summary: Get VeChain Block by hash
      tags:
        - Block
      parameters:
        - description: Block hash or block number
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '325324'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VetBlock'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/account/balance/{address}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get VeChain Account balance in VET.</p>
      operationId: VetGetBalance
      summary: Get VeChain Account balance
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                    description: Balance in VET
                    example: '10.52'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/account/energy/{address}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get VeChain Account energy in VTHO. VTHO is used for paying for the transaction fee.</p>
      operationId: VetGetEnergy
      summary: Get VeChain Account energy (VTHO)
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  energy:
                    type: string
                    description: Balance in VTHO
                    example: '10.52'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/transaction/{hash}':
    get:
      description: <h4>10 credits per API call.</h4><br/><p>Get VeChain Transaction by transaction hash.</p>
      operationId: VetGetTransaction
      summary: Get VeChain Transaction
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '0x24f691abab680972437028af22bc7a43c3fbe8d6d7eefc420dea2daf554758a7'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VetTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/vet/transaction/{hash}/receipt':
    get:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Get VeChain Transaction Receipt by transaction hash. Transaction receipt is available only after transaction is
        included in the block and contains information about paid fee or created contract address and much more.</p>
      operationId: VetGetTransactionReceipt
      summary: Get VeChain Transaction Receipt
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '0x24f691abab680972437028af22bc7a43c3fbe8d6d7eefc420dea2daf554758a7'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VetTxReceipt'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/vet/transaction:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/>
        <p>Send VET from account to account. Fee for the transaction is paid in VTHO.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
        </p>
      operationId: VetBlockchainTransfer
      summary: Send VeChain from account to account
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferVetBlockchain'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403VetFailed'
                  - $ref: '#/components/schemas/Error403VetGas'
                  - $ref: '#/components/schemas/Error403VetTxHash'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/vet/transaction/gas:
    post:
      description: <h4>5 credits per API call.</h4><br/><p>Estimate gas required for transaction.</p>
      operationId: VetEstimateGas
      summary: Estimate VeChain Gas for transaction
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VetEstimateGas'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                example: 21000
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/vet/broadcast:
    post:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to VeChain blockchain. This method is used internally from Tatum KMS, Tatum Middleware or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: VetBroadcast
      summary: Broadcast signed VeChain transaction
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403VetFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    BroadcastKMS:
      properties:
        txData:
          description: Raw signed transaction to be published to network.
          example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
          maxLength: 500000
          minLength: 1
          type: string
        signatureId:
          description: 'ID of prepared payment template to sign. Required only, when broadcasting transaction signed by Tatum KMS.'
          format: uuid
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
          minLength: 36
          maxLength: 36
      required:
        - txData
      type: object
    PrivKey:
      type: object
      properties:
        key:
          description: Generated private key.
          example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
          type: string
    PrivKeyRequest:
      type: object
      properties:
        index:
          description: Derivation index of private key to generate.
          example: 0
          maximum: 2147483647
          type: integer
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key from.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
      required:
        - mnemonic
        - index
    TransactionHashKMS:
      type: object
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    TransferVetBlockchain:
      type: object
      properties:
        to:
          description: Blockchain address to send assets
          example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
          maxLength: 100
          minLength: 1
          type: string
        amount:
          description: Amount to be sent in VET
          example: '100000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromPrivateKey:
          type: string
          maxLength: 66
          minLength: 6
          example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
          description: 'Private key of sender address. Private key, or signature Id must be present.'
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
        data:
          type: string
          maxLength: 10000
          description: 'Additinal data, that can be passed to blockchain transaction as data property.'
          example: My note to recipient.
        fee:
          description: 'Custom defined fee. If not present, it will be calculated automatically.'
          type: object
          required:
            - gasLimit
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction.
              example: '40000'
              pattern: '^[+]?\d+$'
      required:
        - to
        - amount
    VetBlock:
      type: object
      properties:
        number:
          type: integer
          format: uint32
          description: block number (height)
          example: 325324
        id:
          type: string
          format: bytes32
          description: block identifier
          example: '0x0004f6cc88bb4626a92907718e82f255b8fa511453a78e8797eb8cea3393b215'
        size:
          type: integer
          format: uint32
          description: RLP encoded block size in bytes
          example: 373
        parentID:
          type: string
          format: bytes32
          description: parent block ID
          example: '0x0004f6cb730dbd90fed09d165bfdf33cc0eed47ec068938f6ee7b7c12a4ea98d'
        timestamp:
          type: integer
          format: uint64
          description: block unix timestamp
          example: 1533267900
        gasLimit:
          type: integer
          format: uint64
          description: block gas limit (max allowed accumulative gas usage of transactions)
          example: 11253579
        beneficiary:
          type: string
          format: bytes32
          description: Address of account to receive block reward
          example: '0xb4094c25f86d628fdd571afc4077f0d0196afb48'
        gasUsed:
          type: integer
          format: uint64
          description: accumulative gas usage of transactions
          example: 21000
        totalScore:
          type: integer
          format: uint64
          description: sum of all ancestral blocks' score
          example: 1029988
        txsRoot:
          type: string
          format: bytes32
          description: root hash of transactions in the block
          example: '0x89dfd9fcd10c9e53d68592cf8b540b280b72d381b868523223992f3e09a806bb'
        txsFeatures:
          type: integer
          format: uint32
          description: supported txs features bitset
          example: 0
        stateRoot:
          type: string
          format: bytes32
          description: root hash of accounts state
          example: '0x86bcc6d214bc9d8d0dedba1012a63c8317d19ce97f60c8a2ef5c59bbd40d4261'
        receiptsRoot:
          type: string
          format: bytes32
          description: root hash of transaction receipts
          example: '0x15787e2533c470e8a688e6cd17a1ee12d8457778d5f82d2c109e2d6226d8e54e'
        signer:
          type: string
          format: bytes20
          description: the one who signed this block
          example: '0xab7b27fc9e7d29f9f2e5bd361747a5515d0cc2d1'
        transactions:
          type: array
          description: transactions IDs
          items:
            type: string
            format: bytes32
            description: transaction ID
            example: '0x284bba50ef777889ff1a367ed0b38d5e5626714477c40de38d71cedd6f9fa477'
    VetEstimateGas:
      type: object
      required:
        - from
        - to
        - value
      properties:
        from:
          description: Sender account address.
          type: string
          maxLength: 50
          example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
        to:
          type: string
          description: Recipient account address.
          maxLength: 50
          example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
        value:
          type: string
          description: Amount to send.
          maxLength: 50
          example: '140'
        data:
          type: string
          description: Data to send to Smart Contract
          maxLength: 10000
        nonce:
          type: number
          description: Nonce
          example: 12345
    VetTx:
      type: object
      properties:
        id:
          type: string
          example: '0x24f691abab680972437028af22bc7a43c3fbe8d6d7eefc420dea2daf554758a7'
        chainTag:
          type: string
          example: '0x27'
        blockRef:
          type: string
          example: '0x0011bbb748852599'
        expiration:
          type: number
          example: 720
        clauses:
          type: array
          items:
            type: object
            properties:
              to:
                type: string
                example: '0xc6a3007e8e0d959ada56eaa003ebd1d61364cb4f'
              value:
                type: string
                example: '115070300000000000000000000'
              data:
                type: string
                example: 0x
        gasPriceCoef:
          type: number
          example: 120
        gas:
          type: number
          example: 21000
        origin:
          type: string
          example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
        nonce:
          type: string
          example: '0x48ca1882cf3726ee'
        size:
          type: number
          example: 132
        meta:
          properties:
            blockID:
              type: string
              example: '0x0011bbb9925da1b54035e2a870abe336bc79a3b083303646b87a3315c11c963b'
            blockNumber:
              type: number
              example: 1162169
            blockTimestamp:
              type: number
              example: 1541643760
          type: object
        blockNumber:
          type: number
    VetTxReceipt:
      type: object
      properties:
        gasUsed:
          type: number
          example: 21000
        gasPayer:
          type: string
          example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
        paid:
          type: string
          example: '0x1ac942860d7100728'
        reward:
          type: string
          example: '0x8092d8e9da1e688c'
        reverted:
          type: boolean
          example: false
        meta:
          properties:
            blockID:
              type: string
              example: '0x0011bbb9925da1b54035e2a870abe336bc79a3b083303646b87a3315c11c963b'
            blockNumber:
              type: number
              example: 1162169
            blockTimestamp:
              type: number
              example: 1541643760
            txID:
              type: string
              example: '0x24f691abab680972437028af22bc7a43c3fbe8d6d7eefc420dea2daf554758a7'
            txOrigin:
              type: string
              example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
          type: object
        outputs:
          description: List of recipient addresses and amounts to send to each of them.
          type: array
          items:
            type: object
            properties:
              events:
                type: array
                items:
                  type: object
                example: []
              transfers:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      type: string
                      example: '0x5034aa590125b64023a0262112b98d72e3c8e40e'
                    recipient:
                      type: string
                      example: '0xc6a3007e8e0d959ada56eaa003ebd1d61364cb4f'
                    amount:
                      type: string
                      example: '0x5f2f157661ad625bf00000'
        blockNumber:
          type: number
          example: 1162169
        blockHash:
          type: string
          example: '0x0011bbb9925da1b54035e2a870abe336bc79a3b083303646b87a3315c11c963b'
        transactionHash:
          type: string
          example: '0x24f691abab680972437028af22bc7a43c3fbe8d6d7eefc420dea2daf554758a7'
        status:
          type: string
          example: '0x1'
    Wallet:
      type: object
      properties:
        address:
          maxLength: 58
          minLength: 58
          description: address of Algorand account.
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
          type: string
        secret:
          maxLength: 103
          minLength: 103
          description: 'secretKey can generate Mnemonic, similar to private Key.'
          type: string
          example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
    Error403VetFailed:
      properties:
        errorCode:
          description: vet.failed
          example: vet.failed
          type: string
        message:
          description: 'Unable to communicate with blockchain. ${error}'
          example: 'Unable to communicate with blockchain. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403VetGas:
      properties:
        errorCode:
          description: vet.transaction.gas
          example: vet.transaction.gas
          type: string
        message:
          description: 'Unable to calculate gas limit for transaction. ${error}'
          example: 'Unable to calculate gas limit for transaction. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403VetTxHash:
      properties:
        errorCode:
          description: vet.transaction.hash
          example: vet.transaction.hash
          type: string
        message:
          description: Unable to calculate transaction hash.
          example: Unable to calculate transaction hash.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
