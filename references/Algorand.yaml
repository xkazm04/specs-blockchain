openapi: 3.1.0
info:
  contact: {}
  title: Algorand
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
                <p>Algorand is a secure, scalable, and decentralized blockchain platform that supports smart contract functionality. The platform has been used in different verticals such as real estate, microfinance, and is a rich environment for creating NFT-based applications and marketplaces.<br/>
                Tatum supports:
                <ul><li>Mainnet - a regular live chain
                <li>Testnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from
                a faucet, e.g. <a target="_blank" href="https://bank.testnet.algorand.network/">https://bank.testnet.algorand.network/</a></li></ul></p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/algorand/wallet:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Generate Algorand wallet from mnemonic to retrieve address and secret key.</p>
      operationId: AlgorandGenerateWallet
      summary: Generate Algorand wallet
      tags:
        - Account
      parameters:
        - description: Mnemonic to use for generation of extended public and private keys.
          in: query
          name: mnemonic
          required: false
          schema:
            type: string
            maxLength: 500
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/algorand/address/{priv}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate Algorand account deposit address from private key.</p>
      operationId: AlgorandGenerateAddress
      summary: Generate Algorand account address from private key
      tags:
        - Account
      parameters:
        - description: private key of wallet.
          in: path
          name: priv
          required: true
          schema:
            type: string
            example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: Algorand address
                    example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/algorand/account/balance/{address}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get Algorand account balance in ALGO.</p>
      operationId: AlgorandGetBalance
      summary: Get Algorand Account balance
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: TMETT6BXL3QUH7AH5TS6IONU7LVTLKIGG54CFCNPMQXWGRIZFIESZBYWP4
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    description: Balance in ALGO
                    example: 1000
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  /v3/algorand/block/current:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Algorand current block number. This is the number of the latest block in the blockchain.</p>
      operationId: AlgorandGetCurrentBlock
      summary: Get current Algorand block number
      tags:
        - Block
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 16775567
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/algorand/block/{roundNumber}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Algorand block by block round number.</p>
      operationId: AlgorandGetBlock
      summary: Get Algorand block by block round number
      tags:
        - Block
      parameters:
        - description: Block round number
          in: path
          name: roundNumber
          required: true
          schema:
            type: string
            example: '16775567'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoBlock'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  /v3/algorand/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send ALGO from account to account.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
      operationId: AlgorandBlockchainTransfer
      summary: Send ALGO from account to account
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TransferAlgorandBlockchain'
                - $ref: '#/components/schemas/TransferAlgorandBlockchainKMS'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/algorand/transaction/{txid}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Algorand transaction detail by transaction id.</p>
      operationId: AlgorandGetTransaction
      summary: Get Algorand Transaction
      tags:
        - Transaction
      parameters:
        - description: Transaction id
          in: path
          name: txid
          required: true
          schema:
            type: string
            example: LXEBXIBDAIF72NRI76SU252QSOGFCKEHTG7AI4P6W25V35PETU3Q
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  '/v3/algorand/transactions/{from}/{to}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Algorand transaction by specified period of time.</p>
      operationId: AlgorandGetPayTransactionsByFromTo
      summary: Get Algorand Transactions between from and to
      tags:
        - Transaction
      parameters:
        - description: Start timestamp in specified period of time
          in: path
          name: from
          required: true
          schema:
            type: string
            example: '2021-05-01T20:44:39Z'
        - description: End timestamp in specified period of time
          in: path
          name: to
          required: true
          schema:
            type: string
            example: '2021-06-01T20:44:39Z'
        - description: page size for pagination
          in: query
          name: limit
          required: false
          schema:
            type: string
            example: '5'
        - description: Algorand Next Token for getting the next page results
          in: query
          name: next
          required: false
          schema:
            type: string
            example: ywAAAAAAAAAAAAAA
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoTxsWithPagination'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
  /v3/algorand/broadcast:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to Algorand blockchain. This method is used internally from Tatum KMS or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: AlgoandBroadcast
      summary: Broadcast signed Algorand transaction
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastKMS'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    AlgoBlock:
      type: object
      properties:
        genesisHash:
          description: hash to which this block belongs
          type: string
          example: SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=
        genesisId:
          description: ID to which this block belongs
          type: string
          example: testnet-v1.0
        previousBlockHash:
          description: Previous block hash
          type: string
          example: JeLGQTbqnBsD3NXE8Bf1TpPFMFadEVVyHhkcD61ljAU=
        rewards:
          description: rewards
          type: object
          example:
            fee-sink: A7NMWS3NT3IUDMLVO26ULGXGIIOUQ3ND2TXSER6EBGRZNOBOUIQXHIBGDE
            rewards-calculation-round: 17000000
            rewards-level: 27521
            rewards-pool: 7777777777777777777777777777777777777777777777777774MSJUVU
            rewards-rate: 0
            rewards-residue: 2020197303
        round:
          description: Current round on which this block was appended to the chain
          type: number
          example: 16775567
        seed:
          description: Sortition seed.
          type: string
          example: VPBpyrHyqbfqrHqJ3l39LXGN4qgEdNnE5kpJfk3vJtA=
        timestamp:
          description: Block creation timestamp in seconds since eposh
          type: number
          example: 1632167753
        txns:
          description: Array of transactions
          type: array
          items:
            $ref: '#/components/schemas/AlgoTx'
        txn:
          description: TransactionsRoot authenticates the set of transactions appearing in the block.
          type: string
          example: ++MWW82yIvYQ0AEoPP0aDGGHGk/dSp5WHlbkf9SVU1U=
        txnc:
          description: TxnCounter counts the number of transations committed in the ledger
          type: number
          example: 27814470
        upgradeState:
          description: upgrade state
          type: object
          example:
            current-protocol: 'https://github.com/algorandfoundation/specs/tree/abc54f79f9ad679d2d22f0fb9909fb005c16f8a1'
            next-protocol-approvals: 0
            next-protocol-switch-on: 0
            next-protocol-vote-before: 0
        upgradeVote:
          description: upgrade vote
          type: object
          example:
            upgrade-approve: false
            upgrade-delay: 0
    AlgoTx:
      type: object
      properties:
        closeRewards:
          description: rewards applied to close-remainder-to account.
          type: number
          example: 0
        closingAmount:
          description: closing amount for transaction.
          type: number
          example: 0
        confirmedRound:
          description: Round when the transaction was confirmed.
          type: number
          example: 16775567
        fee:
          description: Transaction fee
          type: number
          example: 0.001
        firstValid:
          description: First valid round for this transaction.
          type: number
          example: 16775565
        genesisHash:
          description: Hash of genesis block
          type: string
          example: SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=
        genesisId:
          description: genesis block ID.
          type: string
          example: testnet-v1.0
        id:
          description: transaction ID
          type: string
          example: HNIQ76UTJYPOLZP5FWODYABBJPYPGJNEM2QEJSMDMQRWEKHEYJHQ
        intraRoundOffset:
          description: Offset into the round where this transaction was confirmed.
          type: number
          example: 1
        lastValid:
          description: Last valid round for this transaction.
          type: number
          example: 16775571
        note:
          description: Free form data
          type: string
          example: cGluZ3Bvbmf0Jyl21QrtLw==
        paymentTransaction:
          description: payment Transaction
          type: object
        receiverRewards:
          description: rewards applied to receiver account.
          type: number
          example: 0
        roundTime:
          description: Time when the block this transaction is in was confirmed.
          type: number
          example: 1632167753
        sender:
          description: Sender's address
          type: string
          example: U6QEM4KM7KKGCLH4FELZBGJEVVSF556ELXHUOZC4ESPFS4O4V4VQXKQRXQ
        senderRewards:
          description: rewards applied to sender account.
          type: number
          example: 0
        signature:
          description: signature
          type: object
        txType:
          description: indicates what type of transaction this is. Different types have differnet fields.
          type: string
          example: pay
    AlgoTxsWithPagination:
      type: object
      properties:
        nextToken:
          description: 'Used for pagination, when making another request provide this token with the next parameter.'
          type: string
          example: ywAAAAAAAAAAAAAA
        transactions:
          description: Array of transactions.
          type: array
          items:
            $ref: '#/components/schemas/AlgoTx'
    TransferAlgorandBlockchain:
      type: object
      title: PrivateKey
      properties:
        from:
          description: Blockchain sender address.
          type: string
          example: TMETT6BXL3QUH7AH5TS6IONU7LVTLKIGG54CFCNPMQXWGRIZFIESZBYWP4
        to:
          description: Blockchain address to send algo
          type: string
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
        fee:
          description: Transaction fee in Algos.
          type: string
          example: '0.001'
        amount:
          description: Amount to be sent in Algos.
          type: string
          example: '1'
        note:
          description: Helloworld
          type: string
        fromPrivateKey:
          description: 'Private key of sender address. Private key, or signature Id must be present.'
          type: string
          example: 72TCV5BRQPBMSAFPYO3CPWVDBYWNGAYNMTW5QHENOMQF7I6QLNMJWCJZ7A3V5YKD7QD6ZZPEHG2PV2ZVVEDDO6BCRGXWIL3DIUMSUCI
      required:
        - from
        - to
        - amount
        - fromPrivateKey
    TransferAlgorandBlockchainKMS:
      type: object
      title: Signature
      properties:
        from:
          description: Blockchain sender address.
          type: string
          example: TMETT6BXL3QUH7AH5TS6IONU7LVTLKIGG54CFCNPMQXWGRIZFIESZBYWP4
        to:
          description: Blockchain address to send algo
          type: string
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
        fee:
          description: Transaction fee in MicroAlgos.
          type: string
          example: '1000'
        amount:
          description: Amount to be sent in MicroAlgos.
          type: string
          example: '100000'
        note:
          description: Helloworld
          type: string
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
      required:
        - from
        - to
        - amount
        - signatureId
    BroadcastKMS:
      properties:
        txData:
          description: Raw signed transaction to be published to network.
          example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
          maxLength: 500000
          minLength: 1
          type: string
        signatureId:
          description: 'ID of prepared payment template to sign. Required only, when broadcasting transaction signed by Tatum KMS.'
          format: uuid
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
          minLength: 36
          maxLength: 36
      required:
        - txData
      type: object
    SignatureId:
      type: object
      title: SignatureId
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TransactionHashKMS:
      type: object
      title: TransactionHashKMS
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    Wallet:
      type: object
      properties:
        address:
          maxLength: 58
          minLength: 58
          description: address of Algorand account.
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
          type: string
        secret:
          maxLength: 103
          minLength: 103
          description: 'secretKey can generate Mnemonic, similar to private Key.'
          type: string
          example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        
        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey
