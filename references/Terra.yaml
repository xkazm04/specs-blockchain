openapi: 3.1.0
info:
  contact: {}
  title: Terra Luna
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
                    Some description
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/terra/account:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate Terra account. Tatum does not support HD wallet for Terra, only specific address and private key can be generated.</p>
      operationId: TerraGenerateWallet
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - address
                  - privateKey
                properties:
                  address:
                    description: Generated account address.
                    example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                    type: string
                  privateKey:
                    description: Generated private key for account.
                    example: 42833dd2c36df40d5e4f0ba525d665a25103fc8e01ef86a9d962941855b9902c
                    type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Generate Terra wallet
      tags:
        - Account
  /v3/terra/block/current:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Terra current block number.</p>
      operationId: TerraGetCurrentBlock
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 6491272
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: terra.failed
                    example: terra.failed
                    type: string
                  message:
                    description: 'Unable to communicate with blockchain. ${error}'
                    example: 'Unable to communicate with blockchain. ${error}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get Terra current block
      tags:
        - Block
  '/v3/terra/block/{height}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Transactions in block by block height.</p>
      operationId: TerraGetBlock
      parameters:
        - description: Block height
          in: path
          name: height
          required: true
          schema:
            type: number
            example: 6470657
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    example: ZOWd4U3REeHPupwcHNT2iFcOqNiSP/sN4Uco9DXkP0A=
                  height:
                    type: number
                    example: 8232166
                  timestamp:
                    type: string
                    example: '2022-03-14T11:08:39.026Z'
                  txs:
                    type: array
                    items:
                      type: object
                      properties:
                        txId:
                          type: string
                          example: 6498A3BE7313FEF32C9C0130F321D7808439F7F59D41932122383CC9E109F534
                        height:
                          type: number
                          example: 8232166
                        timestamp:
                          type: string
                          example: '2022-03-14T11:08:39.026Z'
                        gas_wanted:
                          type: number
                          example: 150000
                        gas_used:
                          type: number
                          example: 116128
                        logs:
                          type: array
                          items:
                            type: object
                            properties:
                              msg_index:
                                type: number
                                example: 0
                              events:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: aggregate_vote
                                    attributes:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                            example: voter
                                          value:
                                            type: string
                                            example: terravaloper1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdllfga
                        code:
                          type: number
                          example: 0
                        codespace:
                          type: string
                          example: ''
                        tx:
                          type: object
                          properties:
                            signatures:
                              type: array
                              items:
                                type: string
                                example: SsROsnbOYO9BOZXQtJ1FHcaHV1NgaZGsxX06B1+oS1lS/J85t5bIDsOpvBieo9VzVwoisGPoHyKdi8xLe8TWZg==
                            auth_info:
                              type: object
                              properties:
                                fee:
                                  type: string
                                  example: '{\"amount\":[],\"gas_limit\":\"150000\",\"granter\":\"\",\"payer\":\"\"}'
                                signer_infos:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      public_key:
                                        type: string
                                        example: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AolXZTeuCMvihT8Mw3O/7jbipwaUpudcjZVTmzWGOy10\"}'
                                      sequence:
                                        type: number
                                        example: 436652
                                      mode_info:
                                        type: object
                            body:
                              type: object
                              properties:
                                memo:
                                  type: string
                                  example: '12345'
                                timeout_height:
                                  type: number
                                  example: 0
                                messages:
                                  type: array
                                  items:
                                    type: string
                                    example: '{\"@type\":\"/terra.oracle.v1beta1.MsgAggregateExchangeRatePrevote\",\"feeder\":\"terra1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdsn5cw\",\"hash\":\"f340e3c39c4d224300cd1630c9a91087d48f6623\",\"validator\":\"terravaloper1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdllfga\"}'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: terra.failed
                    example: terra.failed
                    type: string
                  message:
                    description: 'Unable to communicate with blockchain. ${error}'
                    example: 'Unable to communicate with blockchain. ${error}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get Block
      tags:
        - Block
  '/v3/terra/account/{address}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Terra Account Detail by address.</p>
      operationId: TerraGetAccount
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountNumber:
                    type: number
                    example: 696215
                  address:
                    type: string
                    example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                  assets:
                    type: array
                    items:
                      type: object
                      properties:
                        balance:
                          type: string
                          example: '207.00000000'
                        asset:
                          type: string
                          example: LUNA
                  sequence:
                    type: number
                    example: 0
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: terra.failed
                    example: terra.failed
                    type: string
                  message:
                    description: 'Unable to communicate with blockchain. ${error}'
                    example: 'Unable to communicate with blockchain. ${error}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get Terra Account
      tags:
        - Account
  '/v3/terra/transaction/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Terra Transaction by transaction hash.</p>
      operationId: TerraGetTransaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: 004F3B05F7DD1DCE327511C36E883E6B627D87963BA7CF51FFD8D8F286D5291C
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    type: string
                    example: 6498A3BE7313FEF32C9C0130F321D7808439F7F59D41932122383CC9E109F534
                  height:
                    type: number
                    example: 8232166
                  timestamp:
                    type: string
                    example: '2022-03-14T11:08:39.026Z'
                  gas_wanted:
                    type: number
                    example: 150000
                  gas_used:
                    type: number
                    example: 116128
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        msg_index:
                          type: number
                          example: 0
                        events:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                example: aggregate_vote
                              attributes:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                      example: voter
                                    value:
                                      type: string
                                      example: terravaloper1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdllfga
                  code:
                    type: number
                    example: 0
                  codespace:
                    type: string
                    example: ''
                  tx:
                    type: object
                    properties:
                      signatures:
                        type: array
                        items:
                          type: string
                          example: SsROsnbOYO9BOZXQtJ1FHcaHV1NgaZGsxX06B1+oS1lS/J85t5bIDsOpvBieo9VzVwoisGPoHyKdi8xLe8TWZg==
                      auth_info:
                        type: object
                        properties:
                          fee:
                            type: string
                            example: '{\"amount\":[],\"gas_limit\":\"150000\",\"granter\":\"\",\"payer\":\"\"}'
                          signer_infos:
                            type: array
                            items:
                              type: object
                              properties:
                                public_key:
                                  type: string
                                  example: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AolXZTeuCMvihT8Mw3O/7jbipwaUpudcjZVTmzWGOy10\"}'
                                sequence:
                                  type: number
                                  example: 436652
                                mode_info:
                                  type: object
                      body:
                        type: object
                        properties:
                          memo:
                            type: string
                            example: '12345'
                          timeout_height:
                            type: number
                            example: 0
                          messages:
                            type: array
                            items:
                              type: string
                              example: '{\"@type\":\"/terra.oracle.v1beta1.MsgAggregateExchangeRatePrevote\",\"feeder\":\"terra1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdsn5cw\",\"hash\":\"f340e3c39c4d224300cd1630c9a91087d48f6623\",\"validator\":\"terravaloper1d03dz5n3hj8qfzfjvrza8a9t0hejwnjcdllfga\"}'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: terra.failed
                    example: terra.failed
                    type: string
                  message:
                    description: 'Unable to communicate with blockchain. ${error}'
                    example: 'Unable to communicate with blockchain. ${error}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get Terra Transaction
      tags:
        - Transaction
  /v3/terra/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send Terra or Terra Token token from account to account.<br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey.
        PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
         <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
         Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: TerraBlockchainTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    to:
                      description: Blockchain address to send assets.
                      example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                      maxLength: 44
                      minLength: 44
                      type: string
                    currency:
                      description: Currency to transfer from Binance Blockchain Account.
                      enum:
                        - LUNA
                        - LUNA_USD
                        - LUNA_KRW
                      example: LUNA
                      type: string
                    amount:
                      description: Amount to be sent in currency.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    fee:
                      description: Fee to be charged for the operation.
                      maxLength: 38
                      example: '0.015'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      minLength: 52
                      example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
                      description: Private key of sender address.
                    memo:
                      maxLength: 50
                      minLength: 1
                      description: Memo to recipient.
                      example: Memo to recipient
                      type: string
                  required:
                    - to
                    - amount
                    - fromPrivateKey
                    - currency
                - type: object
                  properties:
                    to:
                      description: Blockchain address to send assets.
                      example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                      maxLength: 44
                      minLength: 44
                      type: string
                    currency:
                      description: Currency to transfer from Binance Blockchain Account.
                      enum:
                        - LUNA
                        - LUNA_USD
                        - LUNA_KRW
                      example: LUNA
                      type: string
                    amount:
                      description: Amount to be sent in currency.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    fee:
                      description: Fee to be charged for the operation.
                      maxLength: 38
                      example: '0.015'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Signature hash of the mnemonic, which will be used to sign transactions locally.
                        All signature Ids should be present, which might be used to sign transaction.
                    memo:
                      maxLength: 50
                      minLength: 1
                      description: Memo to recipient.
                      example: Memo to recipient
                      type: string
                  required:
                    - to
                    - amount
                    - signatureId
                    - currency
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    description: TX hash of successful transaction.
                    example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                    type: string
                required:
                  - txId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: terra.failed
                    example: terra.failed
                    type: string
                  message:
                    description: 'Unable to communicate with blockchain. ${error}'
                    example: 'Unable to communicate with blockchain. ${error}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Terra / Terra tokens from account to account
      tags:
        - Transaction
  /v3/terra/broadcast:
    post:
      description: |
        <h4>2 credit per API call.</h4><br/>
        <p>Broadcast signed transaction to Terra blockchain. This method is used internally or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: TerraBroadcast
      requestBody:
        content:
          application/json:
            schema:
              properties:
                txData:
                  description: Raw signed transaction to be published to network.
                  example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
                  maxLength: 500000
                  minLength: 1
                  type: string
                signatureId:
                  type: string
                  minLength: 24
                  maxLength: 24
                  example: 5e68c66581f2ee32bc354087
                  description: Identifier of KMS pending transaction ID to be completed with the broadcast.
              required:
                - txData
              type: object
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    description: TX hash of successful transaction.
                    example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                    type: string
                required:
                  - txId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: terra.failed
                        example: terra.failed
                        type: string
                      message:
                        description: 'Unable to communicate with blockchain. ${error}'
                        example: 'Unable to communicate with blockchain. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Broadcast signed Terra transaction
      tags:
        - Transaction
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
            
        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey
