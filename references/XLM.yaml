openapi: 3.1.0
info:
  contact: {}
  title: XLM
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
    <h3>What is Stellar XLM?</h3>
    Stellar is an open source, decentralized protocol that supports digital currency to fiat money transfers and cross-border transactions at a low cost. 
    Their goal is to connect banks, payment systems, and people by moving money quickly, reliably, and at almost no cost. Stellarâ€™s native cryptocurrency is called the lumen. <br/>
    <h3>How to use Stellar XLM?</h3>
    <p>XLM Blockchain enables access to the most commonly used XLM methods. These methods bring a small level of abstraction
    and are used for applications that communicate with the blockchain directly. Some of the methods are used alongside Tatum Private Ledger
    to connect the blockchain and the private ledger, like wallet generation or getting information about transactions.<br/>
    Tatum supports 2 chains:
    <ul><li> <b>Mainnet</b> - a regular live chain</li>
    <li><b>Testnet</b> - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from a faucet, e.g. <a href="https://friendbot.stellar.org/?addr=address" target="_blank">https://friendbot.stellar.org/?addr=address</a>.</li></ul>
    <br/>In order to start using the XLM blockchain, we first need to create an XLM account. In order to have the account activated, it must be credited with 0.5 XLM.  Because of this requirement, it is common to use one account for all customers and differentiate them using a memo - a short text/number included in every transaction as an account distinguisher.<br/>
    When an off-chain deposit address is created for the ledger account, a memo is generated, e.g. 12345 for that account. When a transaction to the blockchain is performed, it should contain the address of the recipient and the memo as an account distinguisher.</p>
    <h3>Stellar XLM stats</h3>
    <b> Number of users</b>: Around 4,3 milion<br/>
    <b> Gas fee</b>: Prices are <b>medium</b>, but it also depends on the current market situation. (<a href="https://developers.stellar.org/docs/glossary/fees/">Lets have a look at officiall Stellar developer portal to see more information.</a>).
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/xlm/account:
    get:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Generate XLM account. Tatum does not support HD wallet for XLM, only specific address and private key can be generated.</p>
      operationId: XlmWallet
      summary: Generate XLM account
      tags:
        - Account
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XlmWallet'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xlm/info:
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Blockchain last closed ledger.</p>
      operationId: XlmGetLastClosedLedger
      summary: Get XLM Blockchain Information
      tags:
        - Block
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XlmLedger'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xlm/ledger/{sequence}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Blockchain ledger for ledger sequence.</p>
      operationId: XlmGetLedger
      summary: Get XLM Blockchain Ledger by sequence
      tags:
        - Block
      parameters:
        - description: Sequence of the ledger.
          in: path
          name: sequence
          required: true
          schema:
            type: string
            example: '1'
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XlmLedger'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xlm/ledger/{sequence}/transaction':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Blockchain transactions in the ledger.</p>
      operationId: XlmGetLedgerTx
      summary: Get XLM Blockchain Transactions in Ledger
      tags:
        - Transaction
      parameters:
        - description: Sequence of the ledger.
          in: path
          name: sequence
          required: true
          schema:
            type: string
            example: '1'
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XlmTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xlm/fee:
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Blockchain fee in 1/10000000 of XLM (stroop)</p>
      operationId: XlmGetFee
      summary: Get actual XLM fee
      tags:
        - Transaction
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Current fee in 1/10000000 of XLM (stroop)
                example: 100
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xlm/account/tx/{account}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>List all XLM account transactions.</p>
      operationId: XlmGetAccountTx
      summary: Get XLM Account transactions
      tags:
        - Transaction
      parameters:
        - description: Address of XLM account.
          in: path
          name: account
          required: true
          schema:
            type: string
            example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
        - description: Paging token from the last transaction gives you next page
          in: query
          name: pagination
          required: false
          schema:
            type: string
            example: '1'
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XlmTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xlm/transaction/{hash}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Transaction by transaction hash.</p>
      operationId: XlmGetTransaction
      summary: Get XLM Transaction by hash
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            example: 749e4f8933221b9942ef38a02856803f379789ec8d971f1f60535db70135673e
            type: string
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XlmTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xlm/account/{account}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XLM Account detail.</p>
      operationId: XlmGetAccountInfo
      summary: Get XLM Account info
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: account
          required: true
          schema:
            example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
            type: string
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XlmAccount'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xlm/transaction:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/>
        <p>Send XLM from account to account. It is possbile to send native XLM asset, or any other custom asset present on the network.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
        </p>
      operationId: XlmTransferBlockchain
      summary: Send XLM from address to address
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TransferXlmBlockchain'
                - $ref: '#/components/schemas/TransferXlmBlockchainAsset'
                - $ref: '#/components/schemas/TransferXlmBlockchainKMS'
                - $ref: '#/components/schemas/TransferXlmBlockchainKMSAsset'
        required: true
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XlmFailed'
                  - $ref: '#/components/schemas/Error403XlmTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xlm/trust:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Create / Update / Delete XLM trust line between accounts to transfer private assets.
        By creating trustline for the first time, the asset is created automatically and can be used in the transactions.<br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: XlmTrustLineBlockchain
      summary: Create / Update / Delete XLM trust line
      tags:
        - Utilities
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TrustLineXlmBlockchain'
                - $ref: '#/components/schemas/TrustLineXlmBlockchainKMS'
        required: true
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XlmFailed'
                  - $ref: '#/components/schemas/Error403XlmTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xlm/broadcast:
    post:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to XLM blockchain. This method is used internally from Tatum KMS, Tatum Middleware or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: XlmBroadcast
      summary: Broadcast signed XLM transaction
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastKMS'
        required: true
      parameters:
        - description: <b>For requests WITHOUT API key in HTTP header</b>. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls. If API key in http header, testnet/mainnet is recognized automatically.
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XlmFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    BroadcastKMS:
      properties:
        txData:
          description: Raw signed transaction to be published to network.
          example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
          maxLength: 500000
          minLength: 1
          type: string
        signatureId:
          description: 'ID of prepared payment template to sign. Required only, when broadcasting transaction signed by Tatum KMS.'
          format: uuid
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
          minLength: 36
          maxLength: 36
      required:
        - txData
      type: object
    SignatureId:
      type: object
      title: SignatureId
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TransactionHashKMS:
      type: object
      title: TransactionHashKMS
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    TransferXlmBlockchain:
      type: object
      title: Native + PrivateKey
      properties:
        fromAccount:
          description: Blockchain account to send assets from
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        to:
          description: Blockchain address to send assets
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        amount:
          description: 'Amount to be sent, in XLM.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromSecret:
          maxLength: 56
          minLength: 56
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: SCVVKNLBHOWBNJYHD3CNROOA2P3K35I5GNTYUHLLMUHMHWQYNEI7LVED
          type: string
        initialize:
          type: boolean
          default: false
          example: false
          description: 'Set to true, if the destination address is not yet initialized and should be funded for the first time.'
        message:
          description: 'Short message to recipient. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number.'
          example: '12355'
          pattern: '^[ -~]{0,64}$'
          type: string
          maxLength: 64
      required:
        - fromAccount
        - fromSecret
        - to
        - amount
    TransferXlmBlockchainAsset:
      type: object
      title: Asset + PrivateKey
      properties:
        fromAccount:
          description: Blockchain account to send assets from
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        to:
          description: Blockchain address to send assets
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        amount:
          description: 'Amount to be sent, in XLM.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromSecret:
          maxLength: 56
          minLength: 56
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: SCVVKNLBHOWBNJYHD3CNROOA2P3K35I5GNTYUHLLMUHMHWQYNEI7LVED
          type: string
        initialize:
          type: boolean
          default: false
          example: false
          description: 'Set to true, if the destination address is not yet initialized and should be funded for the first time.'
        token:
          description: 'Asset name. If not defined, transaction is being sent in native XLM asset.'
          example: TOKEN123
          type: string
          pattern: '^[a-zA-Z0-9]{1,12}$'
          maxLength: 12
          minLength: 1
        issuerAccount:
          description: 'Blockchain address of the issuer of the assets to send, if not native XLM asset.'
          example: GC5LAVZ5UPLIFDH6SI33PNVL5TKWA4ODXTI3WEF5JM6LRM5MNGVJ56TT
          maxLength: 56
          minLength: 56
          type: string
        message:
          description: 'Short message to recipient. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number.'
          example: '12355'
          pattern: '^[ -~]{0,64}$'
          type: string
          maxLength: 64
      required:
        - fromAccount
        - fromSecret
        - token
        - issuerAccount
        - to
        - amount
    TransferXlmBlockchainKMS:
      type: object
      title: Native + Signature
      properties:
        fromAccount:
          description: Blockchain account to send assets from
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        to:
          description: Blockchain address to send assets
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        amount:
          description: 'Amount to be sent, in XLM.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        initialize:
          type: boolean
          default: false
          example: false
          description: 'Set to true, if the destination address is not yet initialized and should be funded for the first time.'
        message:
          description: 'Short message to recipient. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number.'
          example: '12355'
          pattern: '^[ -~]{0,64}$'
          type: string
          maxLength: 64
      required:
        - fromAccount
        - signatureId
        - to
        - amount
    TransferXlmBlockchainKMSAsset:
      type: object
      title: Asset + Signature
      properties:
        fromAccount:
          description: Blockchain account to send assets from
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        to:
          description: Blockchain address to send assets
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          maxLength: 56
          minLength: 56
          type: string
        amount:
          description: 'Amount to be sent, in XLM.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        initialize:
          type: boolean
          default: false
          example: false
          description: 'Set to true, if the destination address is not yet initialized and should be funded for the first time.'
        token:
          description: 'Asset name. If not defined, transaction is being sent in native XLM asset.'
          example: TOKEN123
          type: string
          pattern: '^[a-zA-Z0-9]{1,12}$'
          maxLength: 12
          minLength: 1
        issuerAccount:
          description: 'Blockchain address of the issuer of the assets to send, if not native XLM asset.'
          example: GC5LAVZ5UPLIFDH6SI33PNVL5TKWA4ODXTI3WEF5JM6LRM5MNGVJ56TT
          maxLength: 56
          minLength: 56
          type: string
        message:
          description: 'Short message to recipient. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number.'
          example: '12355'
          pattern: '^[ -~]{0,64}$'
          type: string
          maxLength: 64
      required:
        - fromAccount
        - signatureId
        - token
        - issuerAccount
        - to
        - amount
    TrustLineXlmBlockchain:
      type: object
      title: PrivateKey
      properties:
        fromAccount:
          maxLength: 56
          minLength: 56
          description: XLM account address. Must be the one used for generating deposit tags.
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          type: string
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: GC5LAVZ5UPLIFDH6SI33PNVL5TKWA4ODXTI3WEF5JM6LRM5MNGVJ56TT
          maxLength: 56
          minLength: 56
          type: string
        token:
          description: Asset name.
          example: TOKEN123
          type: string
          pattern: '^[a-zA-Z0-9]{1,12}$'
          maxLength: 12
          minLength: 1
        fromSecret:
          maxLength: 56
          minLength: 56
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: SCVVKNLBHOWBNJYHD3CNROOA2P3K35I5GNTYUHLLMUHMHWQYNEI7LVED
          type: string
        limit:
          description: 'Amount of the assets to be permitted to send over this trust line. 0 means deletion of the trust line. When no limit is specified, maximum amount available is permitted.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
      required:
        - fromAccount
        - issuerAccount
        - fromSecret
        - token
    TrustLineXlmBlockchainKMS:
      type: object
      title: Signature
      properties:
        fromAccount:
          maxLength: 56
          minLength: 56
          description: XLM account address. Must be the one used for generating deposit tags.
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
          type: string
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: GC5LAVZ5UPLIFDH6SI33PNVL5TKWA4ODXTI3WEF5JM6LRM5MNGVJ56TT
          maxLength: 56
          minLength: 56
          type: string
        token:
          description: Asset name.
          example: TOKEN123
          type: string
          pattern: '^[a-zA-Z0-9]{1,12}$'
          maxLength: 12
          minLength: 1
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        limit:
          description: 'Amount of the assets to be permitted to send over this trust line. 0 means deletion of the trust line. When no limit is specified, maximum amount available is permitted.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
      required:
        - fromAccount
        - issuerAccount
        - signatureId
        - token
    XlmWallet:
      type: object
      required:
        - address
        - secret
      properties:
        address:
          description: Generated account address.
          example: GDKYMXOAJ5MK4EVIHHNWRGAAOUZMNZYAETMHFCD6JCVBPZ77TUAZFPKT
          type: string
        secret:
          description: Generated secret for account.
          example: SCVVKNLBHOWBNJYHD3CNROOA2P3K35I5GNTYUHLLMUHMHWQYNEI7LVED
          type: string
    Error403XlmFailed:
      properties:
        errorCode:
          description: xlm.failed
          example: xlm.failed
          type: string
        message:
          description: 'Unable to communicate with blockchain. ${error}'
          example: 'Unable to communicate with blockchain. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XlmTxFailed:
      properties:
        errorCode:
          description: xlm.tx.failed
          example: xlm.tx.failed
          type: string
        message:
          description: 'Unable to construct transaction. ${error}'
          example: 'Unable to construct transaction. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    XlmAccount:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this account.
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
        account_id:
          type: string
          description: This accountâ€™s public key encoded in a base32 string representation.
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
        sequence:
          type: string
          description: This accountâ€™s current sequence number. For use when submitting this accountâ€™s next transaction.
          example: '1'
        subentry_count:
          type: number
          description: The number of subentries on this account.
          example: 0
        last_modified_ledger:
          type: number
          description: The ID of the last ledger that included changes to this account.
          example: 102
        thresholds:
          properties:
            low_threshold:
              type: number
              description: The weight required for a valid transaction including the Allow Trust and Bump Sequence operations.
              example: 0
            med_threshold:
              type: number
              description: 'The weight required for a valid transaction including the Create Account, Payment, Path Payment, Manage Buy Offer, Manage Sell Offer, Create Passive Sell Offer, Change Trust, Inflation, and Manage Data operations.'
              example: 0
            high_threshold:
              type: number
              description: The weight required for a valid transaction including the Account Merge and Set Options operations.
              example: 0
          type: object
          description: 'Operations have varying levels of access. This field specifies thresholds for different access levels, as well as the weight of the master key.'
        flags:
          properties:
            auth_required:
              type: boolean
              description: 'If set to true, anyone who wants to hold an asset issued by this account must first be approved by this account.'
              example: false
            auth_revocable:
              type: boolean
              description: 'If set to true, this account can freeze the balance of a holder of an asset issued by this account.'
              example: false
            auth_immutable:
              type: boolean
              description: 'If set to true, none of the following flags can be changed.'
              example: false
          type: object
          description: Flags denote the enabling/disabling of certain asset issuer privileges.
        balances:
          type: array
          description: The assets this account holds.
          items:
            type: object
            properties:
              balance:
                type: string
                description: The number of units of an asset held by this account.
                example: '99.9999000'
              limit:
                type: string
                description: The maximum amount of this asset that this account is willing to accept. Specified when opening a trustline.
                example: '99.9999000'
              buying_liabilities:
                type: string
                description: The sum of all buy offers owned by this account for this asset.
                example: '0.0000000'
              selling_liabilities:
                type: string
                description: The sum of all sell offers owned by this account for this asset.
                example: '0.0000000'
              asset_type:
                type: string
                description: 'Either native, credit_alphanum4, or credit_alphanum12.'
                example: native
              asset_code:
                type: string
                description: The code for this asset.
                example: EURT
              asset_issuer:
                type: string
                description: The Stellar address of this assetâ€™s issuer.
                example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
        signers:
          type: array
          description: The public keys and associated weights that can be used to authorize transactions for this account. Used for multi-sig.
          items:
            type: object
            properties:
              weight:
                type: number
                description: The numerical weight of a signer. Used to determine if a transaction meets the threshold requirements.
                example: 1
              key:
                type: string
                description: A hash of characters dependent on the signer type.
                example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
              type:
                type: string
                description: The type of hash for this signer.
                example: ed25519_public_key
                enum:
                  - sha256_hash
                  - ed25519_public_key
                  - preauth_tx
        data:
          properties: {}
          type: object
          description: An array of account data fields.
    XlmLedger:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this ledger.
          example: 63d98f536ee68d1b27b5b89f23af5311b7569a24faf1403ad0b52b633b07be99
        paging_token:
          type: string
          description: A cursor value for use in pagination.
          example: '4294967296'
        hash:
          type: string
          description: A hex-encoded SHA-256 hash of this ledgerâ€™s XDR-encoded form.
          example: 63d98f536ee68d1b27b5b89f23af5311b7569a24faf1403ad0b52b633b07be99
        sequence:
          type: number
          description: 'The sequence number of this ledger, and the parameter used in Horizon calls that require a ledger number.'
          example: 1
        successful_transaction_count:
          type: number
          description: The number of successful transactions in this ledger.
          example: 0
        failed_transaction_count:
          type: number
          description: The number of failed transactions in this ledger.
          example: 0
        operation_count:
          type: number
          description: The number of operations applied in this ledger.
          example: 0
        closed_at:
          type: string
          description: An ISO 8601 formatted string of when this ledger was closed.
          example: '1970-01-01T00:00:00Z'
        total_coins:
          type: string
          description: The total number of lumens in circulation.
          example: '100000000000.0000000'
        fee_pool:
          type: string
          description: The sum of all transaction fees.
          example: '0.0000000'
        base_fee_in_stroops:
          type: number
          description: The fee the network charges per operation in a transaction.
          example: 100
        base_reserve_in_stroops:
          type: number
          description: The reserve the network uses when calculating an accountâ€™s minimum balance.
          example: 100000000
        max_tx_set_size:
          type: number
          description: The maximum number of transactions validators have agreed to process in a given ledger.
          example: 100
        protocol_version:
          type: number
          description: The protocol version that the Stellar network was running when this ledger was committed.
          example: 0
        header_xdr:
          type: string
          description: A base64 encoded string of the raw LedgerHeader xdr struct for this ledger.
          example: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXKi4y/ySKB7DnD9H20xjB+s0gtswIwz1XdSWYaBJaFgAAAAEN4Lazp2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAX14QAAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    XlmTx:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this transaction.
          example: 749e4f8933221b9942ef38a02856803f379789ec8d971f1f60535db70135673e
        paging_token:
          type: string
          description: A cursor value for use in pagination.
          example: '438086668288'
        successful:
          type: boolean
          description: Indicates if this transaction was successful or not.
          example: true
        hash:
          type: string
          description: A hex-encoded SHA-256 hash of this transactionâ€™s XDR-encoded form.
          example: 749e4f8933221b9942ef38a02856803f379789ec8d971f1f60535db70135673e
        ledger:
          type: number
          description: The sequence number of the ledger that this transaction was included in.
          example: 102
        created_at:
          type: string
          description: The date this transaction was created.
          example: '2019-10-30T09:34:07Z'
        source_account:
          type: string
          description: The account that originates the transaction.
          example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
        source_account_sequence:
          type: string
          description: The source accountâ€™s sequence number that this transaction consumed.
          example: '1'
        fee_paid:
          type: number
          description: The fee (in stroops) paid by the source account to apply this transaction to the ledger.
          example: 1000
        fee_charged:
          type: number
          example: 1000
        max_fee:
          type: number
          description: The maximum fee (in stroops) that the source account was willing to pay.
          example: 1000
        operation_count:
          type: number
          description: The number of operations contained within this transaction.
          example: 10
        envelope_xdr:
          type: string
          description: A base64 encoded string of the raw TransactionEnvelope XDR struct for this transaction.
          example: AAAAAGL8HQvQkbK2HA3WVjRrKmjX00fG8sLI7m0ERwJW/AX3AAAD6AAAAAAAAAABAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAEH3Rayw4M0iCLoEe96rPFNGYim8AVHJU0z4ebYZW4JwBY0V4XYoAAAAAAAAAAAAAAAAAAN2+SherpNcNX0imC680fIBdpQfgBwIuqFOgmlobpwLJAAAAF0h26AAAAAAAAAAAAAAAAAAAlRt2go9sp7E1a5ZWvr7vin4UPrFQThpQax1lOFm33AAAABdIdugAAAAAAAAAAAAAAAAAmv+knlR6JR2VqWeU0k/4FgvZ/tSV5DEY4gu0iOTKgpUAAAAXSHboAAAAAAAAAAAAAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bAAAAF0h26AAAAAABAAAAAACVG3aCj2ynsTVrlla+vu+KfhQ+sVBOGlBrHWU4WbfcAAAABgAAAAFURVNUAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bf/////////8AAAABAAAAAJr/pJ5UeiUdlalnlNJP+BYL2f7UleQxGOILtIjkyoKVAAAABgAAAAFURVNUAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bf/////////8AAAABAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bAAAAAQAAAAAAlRt2go9sp7E1a5ZWvr7vin4UPrFQThpQax1lOFm33AAAAAFURVNUAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bAAAJGE5yoAAAAAABAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bAAAAAQAAAACa/6SeVHolHZWpZ5TST/gWC9n+1JXkMRjiC7SI5MqClQAAAAFURVNUAAAAANpaWLojuOtfC0cmMh+DvQTfPDrkfXhblQTdFXrGYc0bAAAJGE5yoAAAAAAAAAAAAAAAAABKBB+2UBMP/abwcm/M1TXO+/JQWhPwkalgqizKmXyRIQx9cN3sY5YAAAAAAAAAAARW/AX3AAAAQDX5vrTLWyUxzrvpeEghwlfZYjb8PhnV+vjXAQE+iCNotx2S0qDtnNppNy9p0qlsXtKKyZqn036kHMFGQ7RxBQ3GYc0bAAAAQOquRvJeUiQ8uDcNGUnIxXT0xaHe91JZHCVjPEm6j9Biii954p9o7Muer9B9ipn6O4Y+4oiF9NbUxyeqh1VJnQw4WbfcAAAAQG/GEctb+uefyEvdeP8V61fCvvdGCW7KoH7iLXxtvanGk9CyydtRGEIxu66hPdUKKbXpXPEKWvnAAp5V+XQqjQnkyoKVAAAAQNTyKwB94kyBjjczpFwMFVtbhHtugo+DYeQKN13jQUjWQDSgistLE+TDrxlxW0qiIhl/GkOdVLMtG6YhfZeVOQU=
        result_xdr:
          type: string
          description: A base64 encoded string of the raw TransactionResult XDR struct for this transaction.
          example: AAAAAAAAA+gAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        result_meta_xdr:
          type: string
          description: A base64 encoded string of the raw TransactionMeta XDR struct for this transaction
          example: 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
        fee_meta_xdr:
          type: string
          description: A base64 encoded string of the raw LedgerEntryChanges XDR struct produced by taking fees for this transaction.
          example: AAAAAgAAAAMAAAABAAAAAAAAAABi/B0L0JGythwN1lY0aypo19NHxvLCyO5tBEcCVvwF9w3gtrOnZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAABmAAAAAAAAAABi/B0L0JGythwN1lY0aypo19NHxvLCyO5tBEcCVvwF9w3gtrOnY/wYAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA==
        memo:
          type: string
          description: The optional memo attached to a transaction. Usually used as an account distiguisher.
          example: '12345'
        memo_type:
          type: string
          description: The type of memo.
          example: MEMO_TEXT
          enum:
            - MEMO_TEXT
            - MEMO_ID
            - MEMO_HASH
            - MEMO_RETURN
        signatures:
          type: array
          description: An array of signatures used to sign this transaction.
          items:
            type: string
          example:
            - Nfm+tMtbJTHOu+l4SCHCV9liNvw+GdX6+NcBAT6II2i3HZLSoO2c2mk3L2nSqWxe0orJmqfTfqQcwUZDtHEFDQ==
            - 6q5G8l5SJDy4Nw0ZScjFdPTFod73UlkcJWM8SbqP0GKKL3nin2jsy56v0H2Kmfo7hj7iiIX01tTHJ6qHVUmdDA==
            - b8YRy1v655/IS914/xXrV8K+90YJbsqgfuItfG29qcaT0LLJ21EYQjG7rqE91Qoptelc8Qpa+cACnlX5dCqNCQ==
            - 1PIrAH3iTIGONzOkXAwVW1uEe26Cj4Nh5Ao3XeNBSNZANKCKy0sT5MOvGXFbSqIiGX8aQ51Usy0bpiF9l5U5BQ==    
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey
