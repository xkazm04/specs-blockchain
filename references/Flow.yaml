openapi: 3.1.0
info:
  contact: {}
  title: Flow
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
                          <p>Flow Blockchain enables access to the most commonly used Flow methods. These methods bring a small level of abstraction
                          and are used for applications that communicate with the blockchain directly. Some of the methods are used alongside Tatum Private Ledger
                          to connect the blockchain and the private ledger, like wallet generation or getting information about transactions.<br/>
                          Tatum supports FLOW and FUSD stable coin.
                          <b>FLOW is in beta phase.</b><br/>
                          Tatum supports 2 chains:
                            <ul><li>Mainnet - a regular live chain</li>
                            <li>Testnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from a faucet, e.g. <a target="_blank" href="https://testnet-faucet.onflow.org/">https://testnet-faucet.onflow.org/</a>
                          <br/>To obtain FUSD on testnet, you can swap them using <a target="_blank" href="https://swap-testnet.blocto.app/#/swap">https://swap-testnet.blocto.app/#/swap</a></li></ul>
                          To create accounts or mint NFTs on <b>mainnet</b>, you have to have paid API Key. Tatum covers the transaction fees on FLOW blockchain out of the box, so mainnet operations are available only on the paid API Key.<br/>
                          Tatum handles automatically proposal key management - we internally rotate the proposal keys for you, so you don't have to take care of that and can easily scale your transaction troughput.<br/>
                          Tatum supports BIP44 HD wallets. Because they can generate 2^31 addresses from 1 mnemonic phrase, they are very convenient and secure. It is possible to generate this type of wallet with 1 simple API call.<br/>
                          It's not possible to pregenrate addresses on the Flow blockchain. You can generate only public keys, which are used to generate address using a create account transaction to the Flow blockchain.
                          You have to have existing account on the Flow to initialize new address creation. Transactions on the Flow blockchain are free.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/flow/wallet:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Tatum supports BIP44 HD wallets. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase. Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.<br/>Each address is identified by 3 main values:<ul><li>Private Key - your secret value, which should never be revealed</li><li>Public Key - public address to be published</li><li>Derivation index - index of generated address</li></ul></p><p>Tatum follows BIP44 specification and generates for Dogecoin wallet with derivation path m'/44'/3'/0'/0. More about BIP44 HD wallets can be found here - <a target="_blank" href="https://github.com/litecoin/bips/blob/master/bip-0044.mediawiki">https://github.com/litecoin/bips/blob/master/bip-0044.mediawiki</a>.
        Generate BIP44 compatible Dogecoin wallet.</p>
      operationId: FlowGenerateWallet
      summary: Generate Flow wallet
      tags:
        - Account
      parameters:
        - description: Mnemonic to use for generation of extended public and private keys.
          in: query
          name: mnemonic
          required: false
          schema:
            type: string
            maxLength: 500
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403BtcBlockchain'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/flow/address/{xpub}/{index}':
    get:
      description: |
        <h4>1 credit for GET operation + 3000 credits per address.</h4><br/>
        <p>Generate Flow address from Extended public key. This operation internally creates public key and assings it to the newly created address on the blockchain.
        There is minimal amount, which must be sent to the FLOW address during creation - 0.001 FLOW, which will be used from Tatum service account.<br/>
        <b>This operation is allowed on any Testnet plan and only on Paid Mainnet plans.</b>
        Public key is generated for the specific index - each extended public key can generate up to 2^31 addresses starting from index 0 until 2^31 - 1.</p>
      operationId: FlowGenerateAddress
      summary: Generate Flow address from Extended public key
      tags:
        - Account
      parameters:
        - description: Extended public key of wallet.
          in: path
          name: xpub
          required: true
          example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
          schema:
            type: string
        - description: Derivation index of desired address to be generated.
          in: path
          name: index
          required: true
          example: 0
          schema:
            type: number
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: Flow address
                    example: '0x4f09d8d43e4967b7'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403AccountIncompatibleXpubBtc'
                  - $ref: '#/components/schemas/Error403AccountAddressGeneral'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/flow/pubkey/{xpub}/{index}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate Flow public key from Extended public key. This key is added to the address on the blockchain and can control the funds there. Public key is generated for the specific index - each extended public key can generate
        up to 2^31 addresses starting from index 0 until 2^31 - 1.</p>
      operationId: FlowGeneratePubKey
      summary: Generate Flow public key from Extended public key
      tags:
        - Account
      parameters:
        - description: Extended public key of wallet.
          in: path
          name: xpub
          required: true
          example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
          schema:
            type: string
        - description: Derivation index of desired address to be generated.
          in: path
          name: index
          required: true
          example: 0
          schema:
            type: number
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  pubKey:
                    type: string
                    description: Flow public key
                    example: 968c3ce11e871cb2b7161b282655ee5fcb051f3c04894705d771bf11c6fbebfc6556ab8a0c04f45ea56281312336d0668529077c9d66891a6cad3db877acbe90
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403AccountIncompatibleXpubBtc'
                  - $ref: '#/components/schemas/Error403AccountAddressGeneral'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/wallet/priv:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Generate private key for address from mnemonic for given derivation path index. Private key is generated for the specific index - each mnemonic
        can generate up to 2^32 private keys starting from index 0 until 2^31 - 1.</p>
      operationId: FlowGeneratePubKeyPrivateKey
      summary: Generate Flow private key
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivKeyRequest'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivKey'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403BlockchainPrivateFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/block/current:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Flow current block number.</p>
      operationId: FlowGetBlockChainInfo
      summary: Get Flow current block number
      tags:
        - Block
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                example: 12345678
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403BtcBlockchain'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/flow/block/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Flow Block detail by block hash or height.</p>
      operationId: FlowGetBlock
      summary: Get Flow Block by hash or height
      tags:
        - Block
      parameters:
        - description: Block hash or height.
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '1234314'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowBlock'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403BlockNotExists'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/block/events:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Flow events from block.</p>
      operationId: FlowGetBlockEvents
      summary: Get Flow events from blocks
      tags:
        - Block
      parameters:
        - description: Event type to search for
          in: query
          name: type
          required: true
          schema:
            type: string
            example: A.7e60df042a9c0868.FlowToken.TokensWithdrawn
        - description: Block height to start searching
          in: query
          name: from
          required: true
          schema:
            type: number
            example: 654321
        - description: Block height to end searching
          in: query
          name: to
          required: true
          schema:
            type: number
            example: 654326
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlowEvent'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403BlockNotExists'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/flow/transaction/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Flow Transaction detail by transaction hash.</p>
      operationId: FlowGetRawTransaction
      summary: Get Flow Transaction by hash
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: d60631d8e5c8b6eb0557b5181cf28564d771c628a08abc414e87ad7c05ff2fc2
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
                  - $ref: '#/components/schemas/Error403TxNotFound'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/flow/account/{address}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Flow account details.</p>
      operationId: FlowGetAccount
      summary: Get Flow account
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x955cd3f17b2fd8ad'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowAccount'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/transaction:
    post:
      description: |
        <h4>100 credits per API call.</h4><br/>
        <p>Send Flow or FUSD to blockchain addresses. Tatum covers the fee connected to the transaction costs in subscription credits. This operation can be done on mainnet only for paid plans.<br/>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic and index - private key is generated based on the index in the mnemonic.</li>
        <li>Using secret - private keys is entered manually.</li>
        </ul><br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: FlowTransferBlockchain
      summary: Send Flow to blockchain addresses
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FlowTransactionMnemonic'
                - $ref: '#/components/schemas/FlowTransactionPK'
                - $ref: '#/components/schemas/FlowTransactionKMS'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcTx'
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
                  - $ref: '#/components/schemas/Error403BtcUTXO'
                  - $ref: '#/components/schemas/Error403Broadcast'
                  - $ref: '#/components/schemas/Error403BtcTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/transaction/custom:
    post:
      description: |
        <h4>100 credits per API call.</h4><br/>
        <p>Send arbitrary blockchain transaction to FLOW blockchain. Tatum covers the fee connected to the transaction costs in subscription credits. This operation can be done on mainnet only for paid plans.<br/>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic and index - private key is generated based on the index in the mnemonic.</li>
        <li>Using secret - private keys is entered manually.</li>
        </ul><br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: FlowTransferCustomBlockchain
      summary: Send arbitrary transaction to blockchain
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FlowCustomTransactionMnemonic'
                - $ref: '#/components/schemas/FlowCustomTransactionPK'
                - $ref: '#/components/schemas/FlowCustomTransactionKMS'
        required: true
      parameters:  
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcTx'
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
                  - $ref: '#/components/schemas/Error403BtcUTXO'
                  - $ref: '#/components/schemas/Error403Broadcast'
                  - $ref: '#/components/schemas/Error403BtcTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/flow/account:
    post:
      description: |
        <h4>100 credits per API call. Tatum covers the fee connected to the transaction costs in subscription credits. This operation can be done on mainnet only for paid plans.</h4><br/>
        <p>Create Flow blockchain addresses from public key. This will generate address on the blockchain with public key. Private key for that public key can be used for signing transaction.
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic and index - private key is generated based on the index in the mnemonic.</li>
        <li>Using secret - private keys is entered manually.</li>
        </ul><br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: FlowCreateAddressFromPubKey
      summary: Create Flow address from public key
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeyMnemonic'
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeySecret'
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeyKMS'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SignatureId'
                  - type: object
                    properties:
                      txId:
                        type: string
                        example: asd
                        description: Id of the transaction
                      address:
                        type: string
                        example: asd
                        description: Generated blockchain address
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcTx'
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
                  - $ref: '#/components/schemas/Error403BtcUTXO'
                  - $ref: '#/components/schemas/Error403Broadcast'
                  - $ref: '#/components/schemas/Error403BtcTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    put:
      description: |
        <h4>100 credits per API call. Tatum covers the fee connected to the transaction costs in subscription credits. This operation can be done on mainnet only for paid plans.</h4><br/>
        <p>Add public key to existing Flow blockchain addresses. Private key for that public key can be used for signing transaction.
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic and index - private key is generated based on the index in the mnemonic.</li>
        <li>Using secret - private keys is entered manually.</li>
        </ul><br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: FlowAddPubKeyToAddress
      summary: Add public key to Flow address
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeyMnemonic'
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeySecret'
                - $ref: '#/components/schemas/FlowCreateAddressFromPubKeyKMS'
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: testnet
            default: mainnet
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHash'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403BtcTx'
                  - $ref: '#/components/schemas/Error403BtcBlockchain'
                  - $ref: '#/components/schemas/Error403BtcUTXO'
                  - $ref: '#/components/schemas/Error403Broadcast'
                  - $ref: '#/components/schemas/Error403BtcTxFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    FlowTransactionPK:
      type: object
      title: PrivateKey
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        currency:
          type: string
          description: Type of asset to send
          enum:
            - FLOW
            - FUSD
        to:
          description: Blockchain address to send assets
          example: '0x955cd3f17b2fd8ae'
          maxLength: 18
          minLength: 18
          type: string
        amount:
          description: 'Amount to be sent, in Flow.'
          maxLength: 38
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        privateKey:
          maxLength: 64
          minLength: 64
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: 37afa218d41d9cd6a2c6f2b96d9eaa3ad96c598252bc50e4d45d62f9356a51f8
          type: string
      required:
        - account
        - address
        - privateKey
        - currency
        - amount
    FlowTransactionKMS:
      type: object
      title: Signature
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        currency:
          type: string
          description: Type of asset to send
          enum:
            - FLOW
            - FUSD
        to:
          description: Blockchain address to send assets
          example: '0x955cd3f17b2fd8ae'
          maxLength: 18
          minLength: 18
          type: string
        amount:
          description: 'Amount to be sent, in Flow.'
          maxLength: 38
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
      required:
        - account
        - currency
        - address
        - amount
        - signatureId
    FlowTransactionMnemonic:
      type: object
      title: Mnemonic
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        currency:
          type: string
          description: Type of asset to send
          enum:
            - FLOW
            - FUSD
        to:
          description: Blockchain address to send assets
          example: '0x955cd3f17b2fd8ae'
          maxLength: 18
          minLength: 18
          type: string
        amount:
          description: 'Amount to be sent, in Flow.'
          maxLength: 38
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
        index:
          type: number
          minimum: 0
          description: Index to the specific address from mnemonic.
      required:
        - account
        - currency
        - address
        - amount
        - mnemonic
        - index
    FlowCustomTransactionPK:
      type: object
      title: PrivateKey
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        transaction:
          description: Transaction string to send to the chain.
          example: |
            transaction(publicKey: String) {
              prepare(signer: AuthAccount) {
                signer.addPublicKey(publicKey.decodeHex())
              }
            }
          maxLength: 500000
          minLength: 1
          type: string
        args:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                description: 'Value of the argument. In case of Array type, it could be list of strings.'
              type:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
              subType:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
            required:
              - type
              - value
        privateKey:
          maxLength: 64
          minLength: 64
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: 37afa218d41d9cd6a2c6f2b96d9eaa3ad96c598252bc50e4d45d62f9356a51f8
          type: string
      required:
        - account
        - transaction
        - privateKey
        - currency
        - args
    FlowCustomTransactionKMS:
      type: object
      title: Signature
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        transaction:
          description: Transaction string to send to the chain.
          example: |
            transaction(publicKey: String) {
              prepare(signer: AuthAccount) {
                signer.addPublicKey(publicKey.decodeHex())
              }
            }
          maxLength: 500000
          minLength: 1
          type: string
        args:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                description: 'Value of the argument. In case of Array type, it could be list of strings.'
              type:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
              subType:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
            required:
              - type
              - value
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
      required:
        - account
        - currency
        - transaction
        - args
        - signatureId
    FlowCustomTransactionMnemonic:
      type: object
      title: Mnemonic
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        transaction:
          description: Transaction string to send to the chain.
          example: |
            transaction(publicKey: String) {
              prepare(signer: AuthAccount) {
                signer.addPublicKey(publicKey.decodeHex())
              }
            }
          maxLength: 500000
          minLength: 1
          type: string
        args:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                description: 'Value of the argument. In case of Array type, it could be list of strings.'
              type:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
              subType:
                description: Type of the argument
                maxLength: 38
                type: string
                enum:
                  - Identity
                  - UInt
                  - Int
                  - UInt8
                  - Int8
                  - UInt16
                  - Int16
                  - UInt32
                  - Int32
                  - UInt64
                  - Int64
                  - UInt128
                  - Int128
                  - UInt256
                  - Int256
                  - Word8
                  - Word16
                  - Word32
                  - Word64
                  - UFix64
                  - Fix64
                  - String
                  - Character
                  - Bool
                  - Address
                  - Void
                  - Optional
                  - Reference
                  - Array
                  - Dictionary
                  - Event
                  - Resource
                  - Struct
            required:
              - type
              - value
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
        index:
          type: number
          minimum: 0
          description: Index to the specific address from mnemonic.
      required:
        - account
        - transaction
        - args
        - mnemonic
        - index
    FlowCreateAddressFromPubKeySecret:
      type: object
      title: PrivateKey
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        publicKey:
          description: Public key to be used
          example: 968c3ce11e871cb2b7161b282655ee5fcb051f3c04894705d771bf11c6fbebfc6556ab8a0c04f45ea56281312336d0668529077c9d66891a6cad3db877acbe90
          maxLength: 128
          minLength: 128
          type: string
        privateKey:
          maxLength: 64
          minLength: 64
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: 37afa218d41d9cd6a2c6f2b96d9eaa3ad96c598252bc50e4d45d62f9356a51f8
          type: string
      required:
        - account
        - privateKey
        - publicKey
    FlowCreateAddressFromPubKeyKMS:
      type: object
      title: Signature
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        publicKey:
          description: Public key to be used
          example: 968c3ce11e871cb2b7161b282655ee5fcb051f3c04894705d771bf11c6fbebfc6556ab8a0c04f45ea56281312336d0668529077c9d66891a6cad3db877acbe90
          maxLength: 128
          minLength: 128
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        index:
          type: number
          minimum: 0
          description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
      required:
        - account
        - publicKey
        - signatureId
    FlowCreateAddressFromPubKeyMnemonic:
      type: object
      title: Mnemonic
      properties:
        account:
          description: Blockchain account to send from
          example: '0x955cd3f17b2fd8ad'
          maxLength: 18
          minLength: 18
          type: string
        publicKey:
          description: Public key to be used
          example: 968c3ce11e871cb2b7161b282655ee5fcb051f3c04894705d771bf11c6fbebfc6556ab8a0c04f45ea56281312336d0668529077c9d66891a6cad3db877acbe90
          maxLength: 128
          minLength: 128
          type: string
        weight:
          description: 'Weight of the key. If not set, default 1000 will be used.'
          example: 1000
          minimum: 0
          maximum: 1000
          type: number
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
        index:
          type: number
          minimum: 0
          description: Index to the specific address from mnemonic.
      required:
        - account
        - publicKey
        - mnemonic
        - index
    Error403AccountIncompatibleXpubBtc:
      properties:
        errorCode:
          description: Address.generation.failed.wrong.xpub
          example: address.generation.failed.wrong.xpub
          type: string
        message:
          description: 'Unable to generate address, wrong xpub and account type.'
          example: 'Unable to generate address, wrong xpub and account type.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403AccountAddressGeneral:
      properties:
        errorCode:
          description: Address.generation.failed
          example: address.generation.failed
          type: string
        message:
          description: Unable to generate address.
          example: Unable to generate address.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BtcBlockchain:
      properties:
        errorCode:
          description: blockchain.error.code
          example: blockchain.error.code
          type: string
        message:
          description: '${error.message} Code: ${error.code}'
          example: '${error.message} Code: ${error.code}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BlockNotExists:
      properties:
        errorCode:
          description: block.hash.not.exists
          example: block.hash.not.exists
          type: string
        message:
          description: No such block.
          example: No such block.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403Broadcast:
      properties:
        errorCode:
          description: blockchain.broadcast.error
          example: blockchain.broadcast.error
          type: string
        message:
          description: 'Unable to broadcast transaction, wrong input data.'
          example: 'Unable to broadcast transaction, wrong input data.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BlockchainPrivateFailed:
      properties:
        errorCode:
          description: key.generation.failed.wrong.mnemonic
          example: key.generation.failed.wrong.mnemonic
          type: string
        message:
          description: 'Unable to generate address, wrong mnemonic and index.'
          example: 'Unable to generate address, wrong mnemonic and index.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BtcUTXO:
      properties:
        errorCode:
          description: tx.hash.index.spent
          example: tx.hash.index.spent
          type: string
        message:
          description: No such UTXO for transaction and index.
          example: No such UTXO for transaction and index.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BtcTx:
      properties:
        errorCode:
          description: transaction.invalid.body
          example: transaction.invalid.body
          type: string
        message:
          description: 'Either UTXO, or addresses must be present.'
          example: 'Either UTXO, or addresses must be present.'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403BtcTxFailed:
      properties:
        errorCode:
          description: transaction.failed
          example: transaction.failed
          type: string
        message:
          description: No spendable inputs.
          example: No spendable inputs.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403TxNotFound:
      properties:
        errorCode:
          description: tx.missing
          example: tx.missing
          type: string
        message:
          description: No such tx.
          example: No such tx.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    FlowBlock:
      type: object
      properties:
        id:
          description: Hash of the block.
          type: string
          example: e11ca8f92f2d5dea7406e64ab8cb1780a8a19185d9ac670b16ca8c4f09f05add
        parentId:
          description: Hash of the parent block.
          type: string
          example: 7bd701e87f319254d19dc17459f97df6a44052d05df5e1cd442dd2e3f48ecedc
        height:
          description: The block number.
          type: number
          example: 31733102
        timestamp:
          description: Timestamp of the block.
          type: string
          example: '2021-05-11T19:13:03.227Z'
        transactions:
          description: Array of transaction IDs.
          type: array
          items:
            type: string
            example: 3b4351560d3b454a4c1ae2485074b0786093058bfe2b28d436584311b1e433a4
        signatures:
          description: Array of signatures.
          type: array
          items:
            type: string
            example: b5ffad6c227cc8dbcb3043dfaa50e8ea5093459ee30242379e6e65e982db84c22faa1da70792349219f3620de95ea16aa8a490000ae824a0002abd60d80b54dc0b42ceab5e98339ec22464f5abb794465357f780f8143f2df077b8f2af69ecd2
        blockSeals:
          description: Array of block seals.
          type: array
          items:
            type: object
            properties:
              blockId:
                type: string
                example: c85bc2853ca9596a80050b6d2661aad10bd6b27d06b013050076ad1bed2c8b6a
              executionReceiptSignatures:
                type: array
                items:
                  type: string
              executionReceiptId:
                type: string
                example: e79acd6437efe49c22832802346908f9590b92fbcd452f72e3b2f1151c48f3ea
              resultApprovalSignatures:
                type: array
                items:
                  type: string
    FlowAccount:
      type: object
      properties:
        address:
          description: Account address.
          type: string
          example: '0x02fcc83938d2b63b'
        balance:
          description: Balance of the account in smallest FLOW unit = 1 FLOW = 1e8 unit
          type: number
          example: 10000000
        code:
          description: Account code
          type: string
        contracts:
          type: object
        keys:
          description: Array of public keys assigned.
          type: array
          items:
            type: object
            properties:
              index:
                description: Index of the public key.
                type: number
                example: 0
              publicKey:
                type: string
                example: ba38c835921828e11264e35fe31cc5ad90149f803fd3106e1dd1df49567a05714ed2bf5e42d58b4fef7eb9b0f7121f446d9b607216fdf04459e007b053288287
              signAlgo:
                description: Type of signature algorithm. 2 - ECDSA_secp256k1
                type: number
                example: 2
              hashAlgo:
                description: Type of hash algo. 3 - SHA3_256
                type: number
                example: 3
              sequenceNumber:
                description: Number of outgoing transactions for this public key.
                type: number
                example: 1
              revoked:
                type: boolean
                example: false
              weight:
                description: Weight of the key. 1000 means single signature necessary.
                type: number
                example: 1000
    FlowTx:
      type: object
      properties:
        referenceBlockId:
          description: Id of the block
          type: string
          example: ad8b9ab637d56e19188cd5410db6e993fbf66216296c99f7934cf9f3594f9658
        script:
          description: Script to execute in the transaction
          type: string
        args:
          description: Args to the transaction
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: Address
              value:
                type: string
                example: '0x21cbd745a4df66f1'
        gasLimit:
          type: number
          example: 1000
          description: Gas limit for the transaction
        proposalKey:
          type: object
          properties:
            address:
              type: string
              example: 21cbd745a4df66f1
            keyId:
              type: number
              example: 0
            sequenceNumber:
              type: number
              example: 20
        payer:
          type: string
          description: Address from which the assets and fees were debited
          example: 955cd3f17b2fd8ad
        payloadSignatures:
          description: Array of payload signatures.
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                example: 21cbd745a4df66f1
              keyId:
                type: number
                example: 0
              signature:
                type: string
                example: 17a936b93b405f74af8ed4c70884ef10d98e900d04fb05bf12767e64ce5e498194348a13952c86335f56c8638fbfd0b1efde66b87e6df9ad687833709f9bd3f3
        envelopeSignatures:
          description: Array of envelope signatures.
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                example: 21cbd745a4df66f1
              keyId:
                type: number
                example: 0
              signature:
                type: string
                example: 17a936b93b405f74af8ed4c70884ef10d98e900d04fb05bf12767e64ce5e498194348a13952c86335f56c8638fbfd0b1efde66b87e6df9ad687833709f9bd3f3
        status:
          type: number
          example: 4
          description: Status of the transaction
        statusCode:
          type: number
          example: 0
          description: Status cofe of the transaction
        errorMessage:
          type: string
        events:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: A.7e60df042a9c0868.FlowToken.TokensWithdrawn
              transactionId:
                type: string
                example: d1c75a84e4bdf0dd9bf1bcd0ce4fb25f89e2ed3c5e9574dbca2760b52c428717
              transactionIndex:
                type: number
                example: 0
              eventIndex:
                type: number
                example: 0
              data:
                type: object
                description: Event specific data. May vary.
    FlowEvent:
      type: object
      properties:
        blockID:
          type: string
          example: c49322287d9ce1d05e909668a15f3e1ed5593b11ace2cbbee56eebf8e9fb1a85
        blockHeight:
          type: number
          example: 14493280
        blockTimestamp:
          type: string
          example: '2021-05-14T21:08:34.536Z'
        type:
          type: string
          example: A.7e60df042a9c0868.FlowToken.TokensWithdrawn
        transactionId:
          type: string
          example: d1c75a84e4bdf0dd9bf1bcd0ce4fb25f89e2ed3c5e9574dbca2760b52c428717
        transactionIndex:
          type: number
          example: 0
        eventIndex:
          type: number
          example: 0
        payload:
          type: object
          properties:
            type:
              type: string
              description: Type of payload.
              enum:
                - Event
            value:
              type: object
              properties:
                id:
                  type: string
                  description: Event type
                  example: A.1654653399040a61.FlowToken.TokensWithdrawn
                fields:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: name
                        description: Name of the property
                      value:
                        oneOf:
                          - type: object
                            properties:
                              type:
                                type: string
                                description: Type of the value
                                example: UFix64
                              value:
                                type: string
                                description: Value
                                example: '0.001'
                          - type: object
                            properties:
                              type:
                                type: string
                                description: Type of the value
                                example: Optional
                              value:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    description: Type of the value
                                    example: Address
                                  value:
                                    type: string
                                    description: Value
                                    example: '0x18eb4ee6b3c026d2'
    PrivKey:
      type: object
      properties:
        key:
          description: Generated private key.
          example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
          type: string
    PrivKeyRequest:
      type: object
      properties:
        index:
          description: Derivation index of private key to generate.
          example: 0
          maximum: 2147483647
          type: integer
        mnemonic:
          maxLength: 500
          minLength: 1
          description: Mnemonic to generate private key from.
          example: urge pulp usage sister evidence arrest palm math please chief egg abuse
          type: string
      required:
        - mnemonic
        - index
    SignatureId:
      type: object
      title: SignatureId
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TransactionHash:
      type: object
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
      required:
        - txId
    TransactionHashKMS:
      type: object
      title: TransactionHashKMS
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    Wallet:
      type: object
      properties:
        address:
          maxLength: 58
          minLength: 58
          description: address of Algorand account.
          example: NTAESFCB3WOD7SAOL42KSPVARLB3JFA3MNX3AESWHYVT2RMYDVZI6YLG4Y
          type: string
        secret:
          maxLength: 103
          minLength: 103
          description: 'secretKey can generate Mnemonic, similar to private Key.'
          type: string
          example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey
