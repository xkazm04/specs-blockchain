openapi: 3.1.0
info:
  contact: {}
  title: XRP
  version: 3.9.3
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
      <p>XRP Blockchain enables access to the most commonly used XRP methods. These methods bring a small level of abstraction
       and are used for applications that communicate with the blockchain directly. Some of the methods are used alongside Tatum Private Ledger
       to connect the blockchain and the private ledger, like wallet generation or getting information about transactions.<br/>
       Tatum supports 2 chains:
      <ul><li>Mainnet - a regular live chain</li>
      <li>Testnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from a faucet, e.g. <a href="https://developers.ripple.com/xrp-test-net-faucet.html" target="_blank">https://developers.ripple.com/xrp-test-net-faucet.html</a>.</li></ul></p>
      <p><br/>In order to start using the XRP blockchain, we first need to create an XRP account. In XRP, the same account is used for the Mainnet and the Test chain. In order to have the account activated, it must be credited with 20 XRP. Because of this requirement, it is common to use one account for all customers and differentiate them via Destination tags, i.e. a number included in every transaction as an account distinguisher.<br/>
      When an off-chain deposit address is created for the ledger account, a Destination tag is generated, e.g. 12345 for that account. When a transaction to the blockchain is performed, it should contain the address of the recipient and the Destination tag as an account distinguisher.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Account
  - description: ''
    name: Block
  - description: ''
    name: Transaction
  - description: ''
    name: Utilities
paths:
  /v3/xrp/account:
    get:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Generate XRP account. Tatum does not support HD wallet for XRP, only specific address and private key can be generated.</p>
      operationId: XrpWallet
      summary: Generate XRP account
      tags:
        - Account
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpWallet'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XrpFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/info:
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XRP Blockchain last closed ledger index and hash.</p>
      operationId: XrpGetLastClosedLedger
      summary: Get XRP Blockchain Information
      tags:
        - Block
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpInfo'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XrpFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/fee:
    get:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Get XRP Blockchain fee. Standard fee for the transaction is available in the drops.base_fee section and is 10 XRP drops by default.
        When there is a heavy traffic on the blockchain, fees are increasing according to current traffic.</p>
      operationId: XrpGetFee
      summary: Get actual Blockchain fee
      tags:
        - Transaction
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpFee'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XrpFailed'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xrp/account/tx/{account}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>List all Account transactions.</p>
      operationId: XrpGetAccountTx
      summary: Get Account transactions
      tags:
        - Transaction
      parameters:
        - description: Address of XRP account.
          in: path
          name: account
          required: true
          schema:
            type: string
        - description: Ledger version to start scanning for transactions from.
          in: query
          name: min
          required: false
          schema:
            type: number
        - description: Marker from the last paginated request. It is stringified JSON from previous response.
          in: query
          name: marker
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpAccountTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpCode'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xrp/ledger/{i}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get ledger by sequence.</p>
      operationId: XrpGetLedger
      summary: Get Ledger
      tags:
        - Block
      parameters:
        - description: Sequence of XRP ledger.
          in: path
          name: i
          required: true
          schema:
            type: number
            minimum: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpLedger'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpLedger'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xrp/transaction/{hash}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XRP Transaction by transaction hash.</p>
      operationId: XrpGetTransaction
      summary: Get XRP Transaction by hash
      tags:
        - Transaction
      parameters:
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            example: 1A32A054B04AC9D6814710DDCA416E72C4CD2D78D6C3DFC06CC9369CC4F6B250
            type: string
            minLength: 64
            maxLength: 64
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpTx'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpCode'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xrp/account/{account}':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XRP Account info.</p>
      operationId: XrpGetAccountInfo2
      summary: Get Account info
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: account
          required: true
          schema:
            example: rDA3DJBUBjA1X3PtLLFAEXxX31oA5nL3QF
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpAccount'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpCode'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/xrp/account/{account}/balance':
    get:
      description: <h4>5 credits per API call.</h4><br/><p>Get XRP Account Balance. Obtain balance of the XRP and other assets on the account.</p>
      operationId: XrpGetAccountBalance
      summary: Get Account Balance
      tags:
        - Account
      parameters:
        - description: Account address
          in: path
          name: account
          required: true
          schema:
            example: rDA3DJBUBjA1X3PtLLFAEXxX31oA5nL3QF
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XrpAccountBalance'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpCode'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/transaction:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/>
        <p>Send XRP from account to account.<br/><br/>
        This operation needs the <strong>private key</strong> of the blockchain address.
        <strong>Warning:</strong> Do not expose private keys to the internet because there is a strong possibility of stealing keys and loss of funds. 
        </br>
        </br>
        In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages or Tatum Middleware with a custom key management system is possible.
        </p>
        </p>
      operationId: XrpTransferBlockchain
      summary: Send XRP from address to address
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TransferXrpBlockchain'
                - $ref: '#/components/schemas/TransferXrpBlockchainAsset'
                - $ref: '#/components/schemas/TransferXrpBlockchainKMS'
                - $ref: '#/components/schemas/TransferXrpBlockchainAssetKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpBroadcast'
                  - $ref: '#/components/schemas/Error403XrpFee'
                  - $ref: '#/components/schemas/Error403XrpSign'
                  - $ref: '#/components/schemas/Error403XrpCode'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/trust:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Create / Update / Delete XRP trust line between accounts to transfer private assets.
        By creating trustline for the first time, the asset is created automatically and can be used in the transactions.<br/>
        Account setting rippling must be enabled on the issuer account before the trust line creation to asset work correctly.
        Creating a trust line will cause an additional 5 XRP to be blocked on the account.<br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: XrpTrustLineBlockchain
      summary: Create / Update / Delete XRP trust line
      tags:
        - Utilities
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TrustLineXrpBlockchain'
                - $ref: '#/components/schemas/TrustLineXrpBlockchainKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpBroadcast'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/account/settings:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Modify XRP account settings. If an XRP account should be an issuer of the custom asset, this accounts should have rippling enabled to true.
        In order to support off-chain processing, required destination tag should be set on the account.<br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: XrpAccountSettings
      summary: Modify XRP account
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AccountSettingsXrpBlockchain'
                - $ref: '#/components/schemas/AccountSettingsXrpBlockchainKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionHashKMS'
                  - $ref: '#/components/schemas/SignatureId'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error403XrpFailed'
                  - $ref: '#/components/schemas/Error403XrpBroadcast'
                  - $ref: '#/components/schemas/Error403XrpMultiple'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/xrp/broadcast:
    post:
      description: |
        <h4>5 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to XRP blockchain. This method is used internally from Tatum KMS, Tatum Middleware or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: XrpBroadcast
      summary: Broadcast signed XRP transaction
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastKMS'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionHashKMS'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403XrpBroadcast'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    BroadcastKMS:
      properties:
        txData:
          description: Raw signed transaction to be published to network.
          example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
          maxLength: 500000
          minLength: 1
          type: string
        signatureId:
          description: 'ID of prepared payment template to sign. Required only, when broadcasting transaction signed by Tatum KMS.'
          format: uuid
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
          minLength: 36
          maxLength: 36
      required:
        - txData
      type: object
    SignatureId:
      type: object
      properties:
        signatureId:
          format: uuid
          description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
          example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
          type: string
      required:
        - signatureId
    TrustLineXrpBlockchain:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: rsP3mgGb2tcYUrxiLFiHJiQXhsziegtwBc
          maxLength: 34
          minLength: 33
          type: string
        limit:
          description: Amount of the assets to be permitted to send over this trust line. 0 means deletion of the trust line.
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        token:
          description: 'Asset name. Must be 160bit HEX string, e.g. SHA1.'
          example: DA39A3EE5E6B4B0D3255BFEF95601890AFD80709
          type: string
          pattern: '^[A-F0-9]{40}$'
          maxLength: 40
          minLength: 40
        fromSecret:
          maxLength: 29
          minLength: 29
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
          type: string
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
      required:
        - fromAccount
        - issuerAccount
        - limit
        - token
        - fromSecret
    TrustLineXrpBlockchainKMS:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: rsP3mgGb2tcYUrxiLFiHJiQXhsziegtwBc
          maxLength: 34
          minLength: 33
          type: string
        limit:
          description: Amount of the assets to be permitted to send over this trust line. 0 means deletion of the trust line.
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        token:
          description: 'Asset name. Must be 160bit HEX string, e.g. SHA1.'
          example: DA39A3EE5E6B4B0D3255BFEF95601890AFD80709
          type: string
          pattern: '^[A-F0-9]{40}$'
          maxLength: 40
          minLength: 40
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
      required:
        - fromAccount
        - issuerAccount
        - limit
        - token
        - signatureId
    AccountSettingsXrpBlockchain:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        fromSecret:
          maxLength: 29
          minLength: 29
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
          type: string
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        rippling:
          description: 'Should be true, if an account is the issuer of assets.'
          example: true
          type: boolean
        requireDestinationTag:
          description: 'Should be true, if an account should support off-chain processing.'
          example: true
          type: boolean
      required:
        - fromAccount
        - fromSecret
    AccountSettingsXrpBlockchainKMS:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: Identifier of the private key associated in signing application. Secret or signature Id must be present.
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        rippling:
          description: 'Should be true, if an account is the issuer of assets.'
          example: true
          type: boolean
        requireDestinationTag:
          description: 'Should be true, if an account should support off-chain processing.'
          example: true
          type: boolean
      required:
        - fromAccount
        - signatureId
    TransactionHashKMS:
      type: object
      properties:
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        failed:
          description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
          example: false
          type: boolean
      required:
        - txId
    TransferXrpBlockchain:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        to:
          description: Blockchain address to send assets
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          maxLength: 34
          minLength: 33
          type: string
        amount:
          description: 'Amount to be sent, in XRP.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromSecret:
          maxLength: 29
          minLength: 29
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
          type: string
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        sourceTag:
          description: 'Source tag of sender account, if any.'
          example: 12355
          type: integer
        destinationTag:
          description: 'Destination tag of recipient account, if any.'
          example: 12355
          type: integer
      required:
        - fromAccount
        - to
        - amount
        - fromSecret
    TransferXrpBlockchainAsset:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        to:
          description: Blockchain address to send assets
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          maxLength: 34
          minLength: 33
          type: string
        amount:
          description: 'Amount to be sent, in XRP.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        fromSecret:
          maxLength: 29
          minLength: 29
          description: 'Secret for account. Secret, or signature Id must be present.'
          example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
          type: string
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        sourceTag:
          description: 'Source tag of sender account, if any.'
          example: 12355
          type: integer
        destinationTag:
          description: 'Destination tag of recipient account, if any.'
          example: 12355
          type: integer
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: rsP3mgGb2tcYUrxiLFiHJiQXhsziegtwBc
          maxLength: 34
          minLength: 33
          type: string
        token:
          description: 'Asset name. Must be 160bit HEX string, e.g. SHA1.'
          example: DA39A3EE5E6B4B0D3255BFEF95601890AFD80709
          type: string
          pattern: '^[A-F0-9]{40}$'
          maxLength: 40
          minLength: 40
      required:
        - fromAccount
        - to
        - amount
        - fromSecret
        - issuerAccount
        - token
    TransferXrpBlockchainKMS:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        to:
          description: Blockchain address to send assets
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          maxLength: 34
          minLength: 33
          type: string
        amount:
          description: 'Amount to be sent, in XRP.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        sourceTag:
          description: 'Source tag of sender account, if any.'
          example: 12355
          type: integer
        destinationTag:
          description: 'Destination tag of recipient account, if any.'
          example: 12355
          type: integer
      required:
        - fromAccount
        - to
        - amount
        - signatureId
    TransferXrpBlockchainAssetKMS:
      type: object
      properties:
        fromAccount:
          maxLength: 34
          minLength: 33
          description: XRP account address. Must be the one used for generating deposit tags.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        to:
          description: Blockchain address to send assets
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          maxLength: 34
          minLength: 33
          type: string
        amount:
          description: 'Amount to be sent, in XRP.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
        fee:
          description: 'Fee to be paid, in XRP. If omitted, current fee will be calculated.'
          example: '10000'
          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
          type: string
        sourceTag:
          description: 'Source tag of sender account, if any.'
          example: 12355
          type: integer
        destinationTag:
          description: 'Destination tag of recipient account, if any.'
          example: 12355
          type: integer
        issuerAccount:
          description: Blockchain address of the issuer of the assets to create trust line for.
          example: rsP3mgGb2tcYUrxiLFiHJiQXhsziegtwBc
          maxLength: 34
          minLength: 33
          type: string
        token:
          description: 'Asset name. Must be 160bit HEX string, e.g. SHA1.'
          example: DA39A3EE5E6B4B0D3255BFEF95601890AFD80709
          type: string
          pattern: '^[A-F0-9]{40}$'
          maxLength: 40
          minLength: 40
      required:
        - fromAccount
        - to
        - amount
        - signatureId
        - issuerAccount
        - token
    XrpWallet:
      type: object
      properties:
        address:
          description: Generated account address.
          example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
          type: string
        secret:
          description: Generated secret for account.
          example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
          type: string
    XrpTx:
      type: object
      properties:
        hash:
          type: string
          description: The SHA-512 hash of the transaction
          example: 1A32A054B04AC9D6814710DDCA416E72C4CD2D78D6C3DFC06CC9369CC4F6B250
        ledger_index:
          type: number
          description: The ledger index of the ledger that includes this transaction.
          example: 760469
        Account:
          type: string
          description: The unique address of the account that initiated the transaction.
          example: rPT1Sjq2YGrBMTttX4GZHjKu9dyfzbpAYe
        Amount:
          type: string
          description: 'Amount of transaction, in drops. 1 drop = 0.000001 XRP.'
          example: '1000000000'
        Destination:
          type: string
          description: Recipient account address.
          example: rDA3DJBUBjA1X3PtLLFAEXxX31oA5nL3QF
        Fee:
          type: string
          description: 'Integer amount of XRP, in drops, to be destroyed as a cost for distributing this transaction to the network. Some transaction types have different minimum requirements.'
          example: '12'
        TransactionType:
          type: string
          description: 'Type of the transaction. XRp supports more than 18 transaction types. For the payment, Payment type is used.'
          example: Payment
        Flags:
          type: number
          description: Set of bit-flags for this transaction.
          example: 2147483648
        LastLedgerSequence:
          type: number
          description: 'Last ledger, in which this transaction could have occured.'
          example: 760473
        Sequence:
          type: number
          description: The sequence number of the account sending the transaction. A transaction is only valid if the Sequence number is exactly 1 greater than the previous transaction from the same account.
          example: 118697
        date:
          type: number
          description: 'Timestamp of the transaction, in Ripple epoch (946684800 seconds after Unix Epoch)'
          example: 622916620
        inLedger:
          type: number
          description: 'Ledger, in which transaction took place.'
          example: 760469
        SigningPubKey:
          type: string
          example: 02356E89059A75438887F9FEE2056A2890DB82A68353BE9C0C0C8F89C0018B37FC
        TxnSignature:
          type: string
          example: 304402206BB719587C55513515C092122813BC71C0BA28E7061830ABE6395308A1CAA0B302205B8256181965BB1345902597B2D3F1670F5F23A2E62097B3CCAA1F2EE631655E
        meta:
          properties:
            AffectedNodes:
              type: array
              items:
                type: object
                properties:
                  ModifiedNode:
                    properties:
                      FinalFields:
                        properties:
                          Account:
                            type: string
                            example: rPT1Sjq2YGrBMTttX4GZHjKu9dyfzbpAYe
                          Balance:
                            type: string
                            example: '99871289963167439'
                          Flags:
                            type: number
                            example: 0
                          OwnerCount:
                            type: number
                            example: 0
                          Sequence:
                            type: number
                            example: 118698
                        type: object
                      LedgerEntryType:
                        type: string
                        example: AccountRoot
                      LedgerIndex:
                        type: string
                        example: 31CCE9D28412FF973E9AB6D0FA219BACF19687D9A2456A0C2ABC3280E9D47E37
                      PreviousFields:
                        required:
                          - Balance
                          - Sequence
                        properties:
                          Balance:
                            type: string
                            example: '99871290963167451'
                          Sequence:
                            type: number
                            example: 118697
                        type: object
                      PreviousTxnID:
                        type: string
                        example: C72E7E2C5D6C123F739689DD6C286910667CC4C2C65F8E6CBBE264E32B08E1B4
                      PreviousTxnLgrSeq:
                        type: number
                        example: 760443
                    type: object
            TransactionIndex:
              type: number
              example: 2
            TransactionResult:
              type: string
              example: tesSUCCESS
            delivered_amount:
              type: string
              example: '1000000000'
          type: object
        validated:
          type: boolean
          description: Whether or not the transaction is included in a validated ledger. Any transaction not yet in a validated ledger is subject to change.
          example: true
    XrpLedger:
      type: object
      properties:
        ledger:
          type: object
          description: The complete header data of this ledger.
          properties:
            accepted:
              type: boolean
              example: true
            account_hash:
              type: string
              description: 'Hash of all account state information in this ledger, as hex.'
              example: 9E081790E520046EBA4B2ED3869C762C16EEAC6817293D40AFFD1F1B602A2321
            close_flags:
              type: integer
              description: 'A bit-map of flags relating to the closing of this ledger. Currently, the ledger has only one flag defined for close_flags: sLCF_NoConsensusTime (value 1). If this flag is enabled, it means that validators were in conflict regarding the correct close time for the ledger, but build otherwise the same ledger, so they declared consensus while "agreeing to disagree" on the close time. In this case, the consensus ledger contains a close_time that is 1 second after that of the previous ledger. (In this case, there is no official close time, but the actual real-world close time is probably 3-6 seconds later than the specified close_time.)'
              example: 0
            close_time:
              type: integer
              description: 'The time this ledger was closed, in seconds since the Ripple Epoch'
              example: 640976331
            close_time_human:
              description: 'The time this ledger was closed, in human-readable format. Always uses the UTC time zone.'
              type: string
              example: '2020-Apr-23 16:58:51.000000000 UTC'
            close_time_resolution:
              description: Ledger close times are rounded to within this many seconds.
              type: integer
              example: 10
            closed:
              description: Whether or not this ledger has been closed.
              type: boolean
              example: true
            hash:
              type: string
              example: 198E3A43EFD03F61CF11EAD6585E8C82A21C1B91CCF782A3264973867E697906
            ledger_hash:
              description: Unique identifying hash of the entire ledger.
              type: string
              example: 198E3A43EFD03F61CF11EAD6585E8C82A21C1B91CCF782A3264973867E697906
            ledger_index:
              description: 'The Ledger Index of this ledger, as a quoted integer.'
              type: string
              example: '6543210'
            parent_close_time:
              description: The time at which the previous ledger was closed.
              type: integer
              example: 640976330
            parent_hash:
              description: Unique identifying hash of the ledger that came immediately before this one.
              type: string
              example: 02860E47A797340505B51DE00E21AA576B1E50509C0C7FF8D5475954DA5FE7B5
            seqNum:
              type: string
              example: '6543210'
            totalCoins:
              type: string
              example: '99999971496551645'
            total_coins:
              type: string
              description: 'Total number of XRP drops in the network, as a quoted integer. (This decreases as transaction costs destroy XRP.)'
              example: '99999971496551645'
            transaction_hash:
              type: string
              description: 'Hash of the transaction information included in this ledger, as hex.'
              example: F415CCAB1ED22B2E81C8BE588A0521634F1CBC478BE3A5563B1E09D283A082C9
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/XrpTx'
        ledger_hash:
          type: string
          description: Unique identifying hash of the entire ledger.
          example: 198E3A43EFD03F61CF11EAD6585E8C82A21C1B91CCF782A3264973867E697906
        ledger_index:
          type: integer
          description: The Ledger Index of this ledger.
          example: 6543210
        validated:
          type: boolean
          description: 'True if this data is from a validated ledger version; if omitted or set to false, this data is not final.'
          example: true
    XrpAccountTx:
      type: object
      properties:
        account:
          type: string
          description: Unique Address identifying the related account.
          example: rPT1Sjq2YGrBMTttX4GZHjKu9dyfzbpAYe
        ledger_index_max:
          type: number
          description: The ledger index of the earliest ledger actually searched for transactions.
          example: 760762
        ledger_index_min:
          type: number
          description: The ledger index of the most recent ledger actually searched for transactions.
          example: 614
        marker:
          description: Server-defined value indicating the response is paginated. Pass this to the next call to resume where this call left off.
          properties:
            ledger:
              type: number
              example: 759571
            seq:
              type: number
              example: 2
          type: object
        transactions:
          type: array
          description: 'Array of transactions matching the request''s criteria, as explained below.'
          items:
            type: object
            properties:
              meta:
                description: Transaction metadata included in JSON format.
                properties:
                  AffectedNodes:
                    type: array
                    items:
                      type: object
                      properties:
                        CreatedNode:
                          properties:
                            LedgerEntryType:
                              type: string
                              example: AccountRoot
                            LedgerIndex:
                              type: string
                              example: 0C9EDA0CDF11B0ACBF4B356C329607E5DDC25B7FCCC51A12579B58220AF6AF54
                            NewFields:
                              properties:
                                Account:
                                  type: string
                                  example: rGenhJmoWHqD6tgmUyxQHLQH8sPuRGtUcv
                                Balance:
                                  type: string
                                  example: '1000000000'
                                Sequence:
                                  type: number
                                  example: 1
                              type: object
                          type: object
                  TransactionIndex:
                    type: number
                    example: 2
                  TransactionResult:
                    type: string
                    example: tesSUCCESS
                  delivered_amount:
                    type: string
                    example: '1000000000'
                type: object
              tx:
                $ref: '#/components/schemas/XrpTx'
              validated:
                type: boolean
                description: 'True if this data is from a validated ledger version; if omitted or set to false, this data is not final.'
                example: true
    XrpAccount:
      type: object
      properties:
        account_data:
          properties:
            Account:
              type: string
              description: 'The identifying address of this account, such as rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn.'
              example: rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn
            Balance:
              type: string
              description: 'The account''s current XRP balance in drops, represented as a string.'
              example: '1000000000'
            Flags:
              type: number
              description: A bit-map of boolean flags enabled for this account.
              example: 0
            LedgerEntryType:
              type: string
              description: 'The value 0x0061, mapped to the string AccountRoot, indicates that this is an AccountRoot object.'
              example: AccountRoot
            OwnerCount:
              type: number
              description: 'The number of objects this account owns in the ledger, which contributes to its owner reserve.'
              example: 0
            PreviousTxnID:
              type: string
              description: The identifying hash of the transaction that most recently modified this object.
              example: 1A32A054B04AC9D6814710DDCA416E72C4CD2D78D6C3DFC06CC9369CC4F6B250
            PreviousTxnLgrSeq:
              type: number
              description: The index of the ledger that contains the transaction that most recently modified this object.
              example: 760469
            Sequence:
              type: number
              description: The sequence number of the next valid transaction for this account. (Each account starts with Sequence = 1 and increases each time a transaction is made.)
              example: 1
            index:
              type: string
              example: BB899D5C7C5E13AFFD702514FC78BE59313AC72AF02A3FC94E5F54F05EB2E20D
          type: object
          description: 'The AccountRoot ledger object with this account''s information, as stored in the ledger.'
        ledger_current_index:
          type: number
          description: The Ledger Index of the current open ledger these stats describe.
          example: 760476
        validated:
          type: boolean
          description: 'True if this data is from a validated ledger version; if omitted or set to false, this data is not final.'
          example: false
    XrpAccountBalance:
      type: object
      properties:
        assets:
          type: array
          description: Different assets other then XRP available on the account.
          items:
            type: object
            properties:
              balance:
                type: string
                description: Balance of the asset.
                example: '1000000000'
              currency:
                type: string
                description: Asset identifier.
                example: 015841551A748AD2C1F76FF6ECB0CCCD00000000
        balance:
          type: string
          description: 'Balance of XRP, in drops.'
          example: '1000000000'
    XrpFee:
      type: object
      properties:
        current_ledger_size:
          type: string
          description: Number of transactions provisionally included in the in-progress ledger.
          example: '8'
        current_queue_size:
          type: string
          description: Number of transactions currently queued for the next ledger.
          example: '0'
        drops:
          description: 'Various information about the transaction cost (the Fee field of a transaction), in drops of XRP.'
          properties:
            base_fee:
              type: string
              description: 'The transaction cost required for a reference transaction to be included in a ledger under minimum load, represented in drops of XRP.'
              example: '10'
            median_fee:
              type: string
              description: 'An approximation of the median transaction cost among transactions included in the previous validated ledger, represented in drops of XRP.'
              example: '5000'
            minimum_fee:
              type: string
              description: 'The minimum transaction cost for a reference transaction to be queued for a later ledger, represented in drops of XRP. If greater than base_fee, the transaction queue is full.'
              example: '10'
            open_ledger_fee:
              type: string
              description: 'The minimum transaction cost that a reference transaction must pay to be included in the current open ledger, represented in drops of XRP.'
              example: '10'
          type: object
        expected_ledger_size:
          type: string
          description: The approximate number of transactions expected to be included in the current ledger. This is based on the number of transactions in the previous ledger.
          example: '67'
        ledger_current_index:
          type: number
          description: The Ledger Index of the current open ledger these stats describe.
          example: 760411
        levels:
          description: 'Various information about the transaction cost, in fee levels. The ratio in fee levels applies to any transaction relative to the minimum cost of that particular transaction.'
          properties:
            median_level:
              type: string
              description: 'The median transaction cost among transactions in the previous validated ledger, represented in fee levels.'
              example: '128000'
            minimum_level:
              type: string
              description: 'The minimum transaction cost required to be queued for a future ledger, represented in fee levels.'
              example: '256'
            open_ledger_level:
              type: string
              description: 'The minimum transaction cost required to be included in the current open ledger, represented in fee levels.'
              example: '256'
            reference_level:
              type: string
              description: 'The equivalent of the minimum transaction cost, represented in fee levels.'
              example: '256'
          type: object
        max_queue_size:
          type: string
          description: The maximum number of transactions that the transaction queue can currently hold.
          example: '2000'
    XrpInfo:
      type: object
      properties:
        ledger_hash:
          type: string
          description: Current ledger hash.
          example: 20C40AAF14D52FB614E41625218AF6C97B43076C30060E85AEFB38D54A99050F
        ledger_index:
          type: number
          description: Current ledger index.
          example: 760383
    Error403XrpFailed:
      properties:
        errorCode:
          description: xrp.failed
          example: xrp.failed
          type: string
        message:
          description: 'Unable to communicate with blockchain. ${error}'
          example: 'Unable to communicate with blockchain. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpCode:
      properties:
        errorCode:
          description: xrp.account.failed
          example: xrp.account.failed
          type: string
        message:
          description: '${error} Code: ${code}'
          example: '${error} Code: ${code}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpLedger:
      properties:
        errorCode:
          description: xrp.ledger.failed
          example: xrp.ledger.failed
          type: string
        message:
          description: '${error} Code: ${code}'
          example: '${error} Code: ${code}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpBroadcast:
      properties:
        errorCode:
          description: xrp.broadcast.failed
          example: xrp.broadcast.failed
          type: string
        message:
          description: 'Xrp submit tx failed. ${error}'
          example: 'Xrp submit tx failed. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpMultiple:
      properties:
        errorCode:
          description: xrp.settings.multiple
          example: xrp.settings.multiple
          type: string
        message:
          description: It is possible to set 1 parameter at a time.
          example: It is possible to set 1 parameter at a time.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpFee:
      properties:
        errorCode:
          description: xrp.fee
          example: xrp.fee
          type: string
        message:
          description: Unable to calculate fee.
          example: Unable to calculate fee.
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403XrpSign:
      properties:
        errorCode:
          description: xrp.sign.failed
          example: xrp.sign.failed
          type: string
        message:
          description: 'Unable to sign tx. ${error}'
          example: 'Unable to sign tx. ${error}'
          type: string
        statusCode:
          description: '403'
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
